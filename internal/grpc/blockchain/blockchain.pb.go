// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockchain/blockchain.proto
package blockchain
import (
	context "context"
	fmt "fmt"
	utils "github.com/Aurorachain/go-aoa/internal/grpc/utils"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)
// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
type BlockNumberRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *BlockNumberRequest) Reset()         { *m = BlockNumberRequest{} }
func (m *BlockNumberRequest) String() string { return proto.CompactTextString(m) }
func (*BlockNumberRequest) ProtoMessage()    {}
func (*BlockNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{0}
}
func (m *BlockNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockNumberRequest.Unmarshal(m, b)
}
func (m *BlockNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockNumberRequest.Marshal(b, m, deterministic)
}
func (m *BlockNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockNumberRequest.Merge(m, src)
}
func (m *BlockNumberRequest) XXX_Size() int {
	return xxx_messageInfo_BlockNumberRequest.Size(m)
}
func (m *BlockNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockNumberRequest.DiscardUnknown(m)
}
var xxx_messageInfo_BlockNumberRequest proto.InternalMessageInfo
type BlockNumberReply struct {
	BlockNumber          []byte   `protobuf:"bytes,1,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *BlockNumberReply) Reset()         { *m = BlockNumberReply{} }
func (m *BlockNumberReply) String() string { return proto.CompactTextString(m) }
func (*BlockNumberReply) ProtoMessage()    {}
func (*BlockNumberReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{1}
}
func (m *BlockNumberReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockNumberReply.Unmarshal(m, b)
}
func (m *BlockNumberReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockNumberReply.Marshal(b, m, deterministic)
}
func (m *BlockNumberReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockNumberReply.Merge(m, src)
}
func (m *BlockNumberReply) XXX_Size() int {
	return xxx_messageInfo_BlockNumberReply.Size(m)
}
func (m *BlockNumberReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockNumberReply.DiscardUnknown(m)
}
var xxx_messageInfo_BlockNumberReply proto.InternalMessageInfo
func (m *BlockNumberReply) GetBlockNumber() []byte {
	if m != nil {
		return m.BlockNumber
	}
	return nil
}
type BalanceRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber          int64    `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *BalanceRequest) Reset()         { *m = BalanceRequest{} }
func (m *BalanceRequest) String() string { return proto.CompactTextString(m) }
func (*BalanceRequest) ProtoMessage()    {}
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{2}
}
func (m *BalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceRequest.Unmarshal(m, b)
}
func (m *BalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceRequest.Marshal(b, m, deterministic)
}
func (m *BalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceRequest.Merge(m, src)
}
func (m *BalanceRequest) XXX_Size() int {
	return xxx_messageInfo_BalanceRequest.Size(m)
}
func (m *BalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceRequest.DiscardUnknown(m)
}
var xxx_messageInfo_BalanceRequest proto.InternalMessageInfo
func (m *BalanceRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *BalanceRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
type BalanceReply struct {
	Balance              []byte   `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *BalanceReply) Reset()         { *m = BalanceReply{} }
func (m *BalanceReply) String() string { return proto.CompactTextString(m) }
func (*BalanceReply) ProtoMessage()    {}
func (*BalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{3}
}
func (m *BalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceReply.Unmarshal(m, b)
}
func (m *BalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceReply.Marshal(b, m, deterministic)
}
func (m *BalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceReply.Merge(m, src)
}
func (m *BalanceReply) XXX_Size() int {
	return xxx_messageInfo_BalanceReply.Size(m)
}
func (m *BalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceReply.DiscardUnknown(m)
}
var xxx_messageInfo_BalanceReply proto.InternalMessageInfo
func (m *BalanceReply) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}
type AssetBalanceRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Asset                []byte   `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	BlockNumber          int64    `protobuf:"varint,3,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *AssetBalanceRequest) Reset()         { *m = AssetBalanceRequest{} }
func (m *AssetBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*AssetBalanceRequest) ProtoMessage()    {}
func (*AssetBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{4}
}
func (m *AssetBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetBalanceRequest.Unmarshal(m, b)
}
func (m *AssetBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetBalanceRequest.Marshal(b, m, deterministic)
}
func (m *AssetBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetBalanceRequest.Merge(m, src)
}
func (m *AssetBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_AssetBalanceRequest.Size(m)
}
func (m *AssetBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetBalanceRequest.DiscardUnknown(m)
}
var xxx_messageInfo_AssetBalanceRequest proto.InternalMessageInfo
func (m *AssetBalanceRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *AssetBalanceRequest) GetAsset() []byte {
	if m != nil {
		return m.Asset
	}
	return nil
}
func (m *AssetBalanceRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
type AssetBalanceReply struct {
	Balance              []byte   `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *AssetBalanceReply) Reset()         { *m = AssetBalanceReply{} }
func (m *AssetBalanceReply) String() string { return proto.CompactTextString(m) }
func (*AssetBalanceReply) ProtoMessage()    {}
func (*AssetBalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{5}
}
func (m *AssetBalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetBalanceReply.Unmarshal(m, b)
}
func (m *AssetBalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetBalanceReply.Marshal(b, m, deterministic)
}
func (m *AssetBalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetBalanceReply.Merge(m, src)
}
func (m *AssetBalanceReply) XXX_Size() int {
	return xxx_messageInfo_AssetBalanceReply.Size(m)
}
func (m *AssetBalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetBalanceReply.DiscardUnknown(m)
}
var xxx_messageInfo_AssetBalanceReply proto.InternalMessageInfo
func (m *AssetBalanceReply) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}
type DetailBalanceRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber          int64    `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *DetailBalanceRequest) Reset()         { *m = DetailBalanceRequest{} }
func (m *DetailBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*DetailBalanceRequest) ProtoMessage()    {}
func (*DetailBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{6}
}
func (m *DetailBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailBalanceRequest.Unmarshal(m, b)
}
func (m *DetailBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailBalanceRequest.Marshal(b, m, deterministic)
}
func (m *DetailBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailBalanceRequest.Merge(m, src)
}
func (m *DetailBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_DetailBalanceRequest.Size(m)
}
func (m *DetailBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailBalanceRequest.DiscardUnknown(m)
}
var xxx_messageInfo_DetailBalanceRequest proto.InternalMessageInfo
func (m *DetailBalanceRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *DetailBalanceRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
type DetailBalanceReply struct {
	Balance              []byte            `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	LockBalance          []byte            `protobuf:"bytes,2,opt,name=lockBalance,proto3" json:"lockBalance,omitempty"`
	TotalBalance         []byte            `protobuf:"bytes,3,opt,name=totalBalance,proto3" json:"totalBalance,omitempty"`
	AssetBalance         map[string][]byte `protobuf:"bytes,4,rep,name=assetBalance,proto3" json:"assetBalance,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}
func (m *DetailBalanceReply) Reset()         { *m = DetailBalanceReply{} }
func (m *DetailBalanceReply) String() string { return proto.CompactTextString(m) }
func (*DetailBalanceReply) ProtoMessage()    {}
func (*DetailBalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{7}
}
func (m *DetailBalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailBalanceReply.Unmarshal(m, b)
}
func (m *DetailBalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailBalanceReply.Marshal(b, m, deterministic)
}
func (m *DetailBalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailBalanceReply.Merge(m, src)
}
func (m *DetailBalanceReply) XXX_Size() int {
	return xxx_messageInfo_DetailBalanceReply.Size(m)
}
func (m *DetailBalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailBalanceReply.DiscardUnknown(m)
}
var xxx_messageInfo_DetailBalanceReply proto.InternalMessageInfo
func (m *DetailBalanceReply) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}
func (m *DetailBalanceReply) GetLockBalance() []byte {
	if m != nil {
		return m.LockBalance
	}
	return nil
}
func (m *DetailBalanceReply) GetTotalBalance() []byte {
	if m != nil {
		return m.TotalBalance
	}
	return nil
}
func (m *DetailBalanceReply) GetAssetBalance() map[string][]byte {
	if m != nil {
		return m.AssetBalance
	}
	return nil
}
type DelegateListRequest struct {
	BlockNumber          int64    `protobuf:"varint,1,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *DelegateListRequest) Reset()         { *m = DelegateListRequest{} }
func (m *DelegateListRequest) String() string { return proto.CompactTextString(m) }
func (*DelegateListRequest) ProtoMessage()    {}
func (*DelegateListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{8}
}
func (m *DelegateListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegateListRequest.Unmarshal(m, b)
}
func (m *DelegateListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegateListRequest.Marshal(b, m, deterministic)
}
func (m *DelegateListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegateListRequest.Merge(m, src)
}
func (m *DelegateListRequest) XXX_Size() int {
	return xxx_messageInfo_DelegateListRequest.Size(m)
}
func (m *DelegateListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegateListRequest.DiscardUnknown(m)
}
var xxx_messageInfo_DelegateListRequest proto.InternalMessageInfo
func (m *DelegateListRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
type DelegateListReply struct {
	Candidate            []*Candidate `protobuf:"bytes,1,rep,name=candidate,proto3" json:"candidate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}
func (m *DelegateListReply) Reset()         { *m = DelegateListReply{} }
func (m *DelegateListReply) String() string { return proto.CompactTextString(m) }
func (*DelegateListReply) ProtoMessage()    {}
func (*DelegateListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{9}
}
func (m *DelegateListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegateListReply.Unmarshal(m, b)
}
func (m *DelegateListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegateListReply.Marshal(b, m, deterministic)
}
func (m *DelegateListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegateListReply.Merge(m, src)
}
func (m *DelegateListReply) XXX_Size() int {
	return xxx_messageInfo_DelegateListReply.Size(m)
}
func (m *DelegateListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegateListReply.DiscardUnknown(m)
}
var xxx_messageInfo_DelegateListReply proto.InternalMessageInfo
func (m *DelegateListReply) GetCandidate() []*Candidate {
	if m != nil {
		return m.Candidate
	}
	return nil
}
type DelegateRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *DelegateRequest) Reset()         { *m = DelegateRequest{} }
func (m *DelegateRequest) String() string { return proto.CompactTextString(m) }
func (*DelegateRequest) ProtoMessage()    {}
func (*DelegateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{10}
}
func (m *DelegateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegateRequest.Unmarshal(m, b)
}
func (m *DelegateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegateRequest.Marshal(b, m, deterministic)
}
func (m *DelegateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegateRequest.Merge(m, src)
}
func (m *DelegateRequest) XXX_Size() int {
	return xxx_messageInfo_DelegateRequest.Size(m)
}
func (m *DelegateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegateRequest.DiscardUnknown(m)
}
var xxx_messageInfo_DelegateRequest proto.InternalMessageInfo
func (m *DelegateRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
type DelegateReply struct {
	Candidate            *Candidate `protobuf:"bytes,1,opt,name=candidate,proto3" json:"candidate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}
func (m *DelegateReply) Reset()         { *m = DelegateReply{} }
func (m *DelegateReply) String() string { return proto.CompactTextString(m) }
func (*DelegateReply) ProtoMessage()    {}
func (*DelegateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{11}
}
func (m *DelegateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegateReply.Unmarshal(m, b)
}
func (m *DelegateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegateReply.Marshal(b, m, deterministic)
}
func (m *DelegateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegateReply.Merge(m, src)
}
func (m *DelegateReply) XXX_Size() int {
	return xxx_messageInfo_DelegateReply.Size(m)
}
func (m *DelegateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegateReply.DiscardUnknown(m)
}
var xxx_messageInfo_DelegateReply proto.InternalMessageInfo
func (m *DelegateReply) GetCandidate() *Candidate {
	if m != nil {
		return m.Candidate
	}
	return nil
}
type VotesNumberRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber          int64    `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *VotesNumberRequest) Reset()         { *m = VotesNumberRequest{} }
func (m *VotesNumberRequest) String() string { return proto.CompactTextString(m) }
func (*VotesNumberRequest) ProtoMessage()    {}
func (*VotesNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{12}
}
func (m *VotesNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VotesNumberRequest.Unmarshal(m, b)
}
func (m *VotesNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VotesNumberRequest.Marshal(b, m, deterministic)
}
func (m *VotesNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VotesNumberRequest.Merge(m, src)
}
func (m *VotesNumberRequest) XXX_Size() int {
	return xxx_messageInfo_VotesNumberRequest.Size(m)
}
func (m *VotesNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VotesNumberRequest.DiscardUnknown(m)
}
var xxx_messageInfo_VotesNumberRequest proto.InternalMessageInfo
func (m *VotesNumberRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *VotesNumberRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
type VotesNumberReply struct {
	Number               []byte   `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *VotesNumberReply) Reset()         { *m = VotesNumberReply{} }
func (m *VotesNumberReply) String() string { return proto.CompactTextString(m) }
func (*VotesNumberReply) ProtoMessage()    {}
func (*VotesNumberReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{13}
}
func (m *VotesNumberReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VotesNumberReply.Unmarshal(m, b)
}
func (m *VotesNumberReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VotesNumberReply.Marshal(b, m, deterministic)
}
func (m *VotesNumberReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VotesNumberReply.Merge(m, src)
}
func (m *VotesNumberReply) XXX_Size() int {
	return xxx_messageInfo_VotesNumberReply.Size(m)
}
func (m *VotesNumberReply) XXX_DiscardUnknown() {
	xxx_messageInfo_VotesNumberReply.DiscardUnknown(m)
}
var xxx_messageInfo_VotesNumberReply proto.InternalMessageInfo
func (m *VotesNumberReply) GetNumber() []byte {
	if m != nil {
		return m.Number
	}
	return nil
}
type VotesListRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber          int64    `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *VotesListRequest) Reset()         { *m = VotesListRequest{} }
func (m *VotesListRequest) String() string { return proto.CompactTextString(m) }
func (*VotesListRequest) ProtoMessage()    {}
func (*VotesListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{14}
}
func (m *VotesListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VotesListRequest.Unmarshal(m, b)
}
func (m *VotesListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VotesListRequest.Marshal(b, m, deterministic)
}
func (m *VotesListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VotesListRequest.Merge(m, src)
}
func (m *VotesListRequest) XXX_Size() int {
	return xxx_messageInfo_VotesListRequest.Size(m)
}
func (m *VotesListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VotesListRequest.DiscardUnknown(m)
}
var xxx_messageInfo_VotesListRequest proto.InternalMessageInfo
func (m *VotesListRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *VotesListRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
type VotesListReply struct {
	Address              [][]byte `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *VotesListReply) Reset()         { *m = VotesListReply{} }
func (m *VotesListReply) String() string { return proto.CompactTextString(m) }
func (*VotesListReply) ProtoMessage()    {}
func (*VotesListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{15}
}
func (m *VotesListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VotesListReply.Unmarshal(m, b)
}
func (m *VotesListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VotesListReply.Marshal(b, m, deterministic)
}
func (m *VotesListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VotesListReply.Merge(m, src)
}
func (m *VotesListReply) XXX_Size() int {
	return xxx_messageInfo_VotesListReply.Size(m)
}
func (m *VotesListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_VotesListReply.DiscardUnknown(m)
}
var xxx_messageInfo_VotesListReply proto.InternalMessageInfo
func (m *VotesListReply) GetAddress() [][]byte {
	if m != nil {
		return m.Address
	}
	return nil
}
type BlockRequest struct {
	BlockNumber          int64    `protobuf:"varint,1,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	FullTx               bool     `protobuf:"varint,2,opt,name=fullTx,proto3" json:"fullTx,omitempty"`
	Hash                 []byte   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{16}
}
func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (m *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(m, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}
var xxx_messageInfo_BlockRequest proto.InternalMessageInfo
func (m *BlockRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
func (m *BlockRequest) GetFullTx() bool {
	if m != nil {
		return m.FullTx
	}
	return false
}
func (m *BlockRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}
type BlockReply struct {
	//    Block block = 1;
	//    "number":     (*hexutil.Big)(head.Number),
	//	"hash":       b.Hash(),
	//	"parentHash": head.ParentHash,
	//		// "logsBloom": head.Bloom,
	//		"stateRoot":               head.Root,
	//		"delegateRoot":            head.DelegateRoot,
	//		"validatorAddress":        head.Coinbase,
	//		"extraData":               hexutil.Bytes(head.Extra),
	//		"size":                    hexutil.Uint64(uint64(b.Size().Int64())),
	//		"gasLimit":                hexutil.Uint64(head.GasLimit),
	//		"gasUsed":                 hexutil.Uint64(head.GasUsed),
	//		"timestamp":               (*hexutil.Big)(head.Time),
	//		"transactionsRoot":        head.TxHash,
	//		"receiptsRoot":            head.ReceiptHash,
	//		"validator":               hexutil.Bytes(head.AgentName),
	//		"shuffleDelegateListHash": head.ShuffleHash,
	//		"shuffleBlockNumber":      (*hexutil.Big)(head.ShuffleBlockNumber),
	Number                  []byte                `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Hash                    []byte                `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	ParentHash              []byte                `protobuf:"bytes,3,opt,name=parentHash,proto3" json:"parentHash,omitempty"`
	StateRoot               []byte                `protobuf:"bytes,4,opt,name=stateRoot,proto3" json:"stateRoot,omitempty"`
	DelegateRoot            []byte                `protobuf:"bytes,5,opt,name=delegateRoot,proto3" json:"delegateRoot,omitempty"`
	ValidatorAddress        []byte                `protobuf:"bytes,6,opt,name=validatorAddress,proto3" json:"validatorAddress,omitempty"`
	ExtraData               []byte                `protobuf:"bytes,7,opt,name=extraData,proto3" json:"extraData,omitempty"`
	Size                    uint64                `protobuf:"fixed64,8,opt,name=size,proto3" json:"size,omitempty"`
	GasLimit                uint64                `protobuf:"fixed64,9,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	GasUsed                 uint64                `protobuf:"fixed64,10,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`
	Timestamp               []byte                `protobuf:"bytes,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TransactionsRoot        []byte                `protobuf:"bytes,12,opt,name=transactionsRoot,proto3" json:"transactionsRoot,omitempty"`
	ReceiptsRoot            []byte                `protobuf:"bytes,13,opt,name=receiptsRoot,proto3" json:"receiptsRoot,omitempty"`
	Validator               []byte                `protobuf:"bytes,14,opt,name=validator,proto3" json:"validator,omitempty"`
	ShuffleDelegateListHash []byte                `protobuf:"bytes,15,opt,name=shuffleDelegateListHash,proto3" json:"shuffleDelegateListHash,omitempty"`
	ShuffleBlockNumber      []byte                `protobuf:"bytes,16,opt,name=shuffleBlockNumber,proto3" json:"shuffleBlockNumber,omitempty"`
	RpcTransaction          *utils.RpcTransaction `protobuf:"bytes,17,opt,name=rpcTransaction,proto3" json:"rpcTransaction,omitempty"`
	Transactions            [][]byte              `protobuf:"bytes,18,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}              `json:"-"`
	XXX_unrecognized        []byte                `json:"-"`
	XXX_sizecache           int32                 `json:"-"`
}
func (m *BlockReply) Reset()         { *m = BlockReply{} }
func (m *BlockReply) String() string { return proto.CompactTextString(m) }
func (*BlockReply) ProtoMessage()    {}
func (*BlockReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{17}
}
func (m *BlockReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockReply.Unmarshal(m, b)
}
func (m *BlockReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockReply.Marshal(b, m, deterministic)
}
func (m *BlockReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockReply.Merge(m, src)
}
func (m *BlockReply) XXX_Size() int {
	return xxx_messageInfo_BlockReply.Size(m)
}
func (m *BlockReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockReply.DiscardUnknown(m)
}
var xxx_messageInfo_BlockReply proto.InternalMessageInfo
func (m *BlockReply) GetNumber() []byte {
	if m != nil {
		return m.Number
	}
	return nil
}
func (m *BlockReply) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}
func (m *BlockReply) GetParentHash() []byte {
	if m != nil {
		return m.ParentHash
	}
	return nil
}
func (m *BlockReply) GetStateRoot() []byte {
	if m != nil {
		return m.StateRoot
	}
	return nil
}
func (m *BlockReply) GetDelegateRoot() []byte {
	if m != nil {
		return m.DelegateRoot
	}
	return nil
}
func (m *BlockReply) GetValidatorAddress() []byte {
	if m != nil {
		return m.ValidatorAddress
	}
	return nil
}
func (m *BlockReply) GetExtraData() []byte {
	if m != nil {
		return m.ExtraData
	}
	return nil
}
func (m *BlockReply) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}
func (m *BlockReply) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}
func (m *BlockReply) GetGasUsed() uint64 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}
func (m *BlockReply) GetTimestamp() []byte {
	if m != nil {
		return m.Timestamp
	}
	return nil
}
func (m *BlockReply) GetTransactionsRoot() []byte {
	if m != nil {
		return m.TransactionsRoot
	}
	return nil
}
func (m *BlockReply) GetReceiptsRoot() []byte {
	if m != nil {
		return m.ReceiptsRoot
	}
	return nil
}
func (m *BlockReply) GetValidator() []byte {
	if m != nil {
		return m.Validator
	}
	return nil
}
func (m *BlockReply) GetShuffleDelegateListHash() []byte {
	if m != nil {
		return m.ShuffleDelegateListHash
	}
	return nil
}
func (m *BlockReply) GetShuffleBlockNumber() []byte {
	if m != nil {
		return m.ShuffleBlockNumber
	}
	return nil
}
func (m *BlockReply) GetRpcTransaction() *utils.RpcTransaction {
	if m != nil {
		return m.RpcTransaction
	}
	return nil
}
func (m *BlockReply) GetTransactions() [][]byte {
	if m != nil {
		return m.Transactions
	}
	return nil
}
type Block struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{18}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}
var xxx_messageInfo_Block proto.InternalMessageInfo
type CodeRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber          int64    `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *CodeRequest) Reset()         { *m = CodeRequest{} }
func (m *CodeRequest) String() string { return proto.CompactTextString(m) }
func (*CodeRequest) ProtoMessage()    {}
func (*CodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{19}
}
func (m *CodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeRequest.Unmarshal(m, b)
}
func (m *CodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeRequest.Marshal(b, m, deterministic)
}
func (m *CodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeRequest.Merge(m, src)
}
func (m *CodeRequest) XXX_Size() int {
	return xxx_messageInfo_CodeRequest.Size(m)
}
func (m *CodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeRequest.DiscardUnknown(m)
}
var xxx_messageInfo_CodeRequest proto.InternalMessageInfo
func (m *CodeRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *CodeRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
type CodeReply struct {
	Code                 []byte   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *CodeReply) Reset()         { *m = CodeReply{} }
func (m *CodeReply) String() string { return proto.CompactTextString(m) }
func (*CodeReply) ProtoMessage()    {}
func (*CodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{20}
}
func (m *CodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeReply.Unmarshal(m, b)
}
func (m *CodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeReply.Marshal(b, m, deterministic)
}
func (m *CodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeReply.Merge(m, src)
}
func (m *CodeReply) XXX_Size() int {
	return xxx_messageInfo_CodeReply.Size(m)
}
func (m *CodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeReply.DiscardUnknown(m)
}
var xxx_messageInfo_CodeReply proto.InternalMessageInfo
func (m *CodeReply) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}
type AbiRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber          int64    `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *AbiRequest) Reset()         { *m = AbiRequest{} }
func (m *AbiRequest) String() string { return proto.CompactTextString(m) }
func (*AbiRequest) ProtoMessage()    {}
func (*AbiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{21}
}
func (m *AbiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbiRequest.Unmarshal(m, b)
}
func (m *AbiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbiRequest.Marshal(b, m, deterministic)
}
func (m *AbiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbiRequest.Merge(m, src)
}
func (m *AbiRequest) XXX_Size() int {
	return xxx_messageInfo_AbiRequest.Size(m)
}
func (m *AbiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AbiRequest.DiscardUnknown(m)
}
var xxx_messageInfo_AbiRequest proto.InternalMessageInfo
func (m *AbiRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *AbiRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
type AbiReply struct {
	Abi                  string   `protobuf:"bytes,1,opt,name=abi,proto3" json:"abi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *AbiReply) Reset()         { *m = AbiReply{} }
func (m *AbiReply) String() string { return proto.CompactTextString(m) }
func (*AbiReply) ProtoMessage()    {}
func (*AbiReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{22}
}
func (m *AbiReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbiReply.Unmarshal(m, b)
}
func (m *AbiReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbiReply.Marshal(b, m, deterministic)
}
func (m *AbiReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbiReply.Merge(m, src)
}
func (m *AbiReply) XXX_Size() int {
	return xxx_messageInfo_AbiReply.Size(m)
}
func (m *AbiReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AbiReply.DiscardUnknown(m)
}
var xxx_messageInfo_AbiReply proto.InternalMessageInfo
func (m *AbiReply) GetAbi() string {
	if m != nil {
		return m.Abi
	}
	return ""
}
type StorageRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	BlockNumber          int64    `protobuf:"varint,3,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *StorageRequest) Reset()         { *m = StorageRequest{} }
func (m *StorageRequest) String() string { return proto.CompactTextString(m) }
func (*StorageRequest) ProtoMessage()    {}
func (*StorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{23}
}
func (m *StorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageRequest.Unmarshal(m, b)
}
func (m *StorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageRequest.Marshal(b, m, deterministic)
}
func (m *StorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageRequest.Merge(m, src)
}
func (m *StorageRequest) XXX_Size() int {
	return xxx_messageInfo_StorageRequest.Size(m)
}
func (m *StorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageRequest.DiscardUnknown(m)
}
var xxx_messageInfo_StorageRequest proto.InternalMessageInfo
func (m *StorageRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *StorageRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}
func (m *StorageRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
type StorageReply struct {
	Storage              []byte   `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *StorageReply) Reset()         { *m = StorageReply{} }
func (m *StorageReply) String() string { return proto.CompactTextString(m) }
func (*StorageReply) ProtoMessage()    {}
func (*StorageReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{24}
}
func (m *StorageReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageReply.Unmarshal(m, b)
}
func (m *StorageReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageReply.Marshal(b, m, deterministic)
}
func (m *StorageReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageReply.Merge(m, src)
}
func (m *StorageReply) XXX_Size() int {
	return xxx_messageInfo_StorageReply.Size(m)
}
func (m *StorageReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageReply.DiscardUnknown(m)
}
var xxx_messageInfo_StorageReply proto.InternalMessageInfo
func (m *StorageReply) GetStorage() []byte {
	if m != nil {
		return m.Storage
	}
	return nil
}
type CallRequest struct {
	Call                 *Call    `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	BlockNumber          int64    `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *CallRequest) Reset()         { *m = CallRequest{} }
func (m *CallRequest) String() string { return proto.CompactTextString(m) }
func (*CallRequest) ProtoMessage()    {}
func (*CallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{25}
}
func (m *CallRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallRequest.Unmarshal(m, b)
}
func (m *CallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallRequest.Marshal(b, m, deterministic)
}
func (m *CallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallRequest.Merge(m, src)
}
func (m *CallRequest) XXX_Size() int {
	return xxx_messageInfo_CallRequest.Size(m)
}
func (m *CallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CallRequest.DiscardUnknown(m)
}
var xxx_messageInfo_CallRequest proto.InternalMessageInfo
func (m *CallRequest) GetCall() *Call {
	if m != nil {
		return m.Call
	}
	return nil
}
func (m *CallRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}
type CallReply struct {
	Result               []byte   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *CallReply) Reset()         { *m = CallReply{} }
func (m *CallReply) String() string { return proto.CompactTextString(m) }
func (*CallReply) ProtoMessage()    {}
func (*CallReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{26}
}
func (m *CallReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallReply.Unmarshal(m, b)
}
func (m *CallReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallReply.Marshal(b, m, deterministic)
}
func (m *CallReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallReply.Merge(m, src)
}
func (m *CallReply) XXX_Size() int {
	return xxx_messageInfo_CallReply.Size(m)
}
func (m *CallReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CallReply.DiscardUnknown(m)
}
var xxx_messageInfo_CallReply proto.InternalMessageInfo
func (m *CallReply) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}
type EstimateGasRequest struct {
	Call                 *Call    `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *EstimateGasRequest) Reset()         { *m = EstimateGasRequest{} }
func (m *EstimateGasRequest) String() string { return proto.CompactTextString(m) }
func (*EstimateGasRequest) ProtoMessage()    {}
func (*EstimateGasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{27}
}
func (m *EstimateGasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateGasRequest.Unmarshal(m, b)
}
func (m *EstimateGasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateGasRequest.Marshal(b, m, deterministic)
}
func (m *EstimateGasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateGasRequest.Merge(m, src)
}
func (m *EstimateGasRequest) XXX_Size() int {
	return xxx_messageInfo_EstimateGasRequest.Size(m)
}
func (m *EstimateGasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateGasRequest.DiscardUnknown(m)
}
var xxx_messageInfo_EstimateGasRequest proto.InternalMessageInfo
func (m *EstimateGasRequest) GetCall() *Call {
	if m != nil {
		return m.Call
	}
	return nil
}
type EstimateGasReply struct {
	Result               uint64   `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *EstimateGasReply) Reset()         { *m = EstimateGasReply{} }
func (m *EstimateGasReply) String() string { return proto.CompactTextString(m) }
func (*EstimateGasReply) ProtoMessage()    {}
func (*EstimateGasReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{28}
}
func (m *EstimateGasReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateGasReply.Unmarshal(m, b)
}
func (m *EstimateGasReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateGasReply.Marshal(b, m, deterministic)
}
func (m *EstimateGasReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateGasReply.Merge(m, src)
}
func (m *EstimateGasReply) XXX_Size() int {
	return xxx_messageInfo_EstimateGasReply.Size(m)
}
func (m *EstimateGasReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateGasReply.DiscardUnknown(m)
}
var xxx_messageInfo_EstimateGasReply proto.InternalMessageInfo
func (m *EstimateGasReply) GetResult() uint64 {
	if m != nil {
		return m.Result
	}
	return 0
}
type AssetInfoRequest struct {
	Asset                []byte   `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *AssetInfoRequest) Reset()         { *m = AssetInfoRequest{} }
func (m *AssetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*AssetInfoRequest) ProtoMessage()    {}
func (*AssetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{29}
}
func (m *AssetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetInfoRequest.Unmarshal(m, b)
}
func (m *AssetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetInfoRequest.Marshal(b, m, deterministic)
}
func (m *AssetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetInfoRequest.Merge(m, src)
}
func (m *AssetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_AssetInfoRequest.Size(m)
}
func (m *AssetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetInfoRequest.DiscardUnknown(m)
}
var xxx_messageInfo_AssetInfoRequest proto.InternalMessageInfo
func (m *AssetInfoRequest) GetAsset() []byte {
	if m != nil {
		return m.Asset
	}
	return nil
}
type AssetInfoReply struct {
	AssetInfo            *utils.AssetInfo `protobuf:"bytes,1,opt,name=assetInfo,proto3" json:"assetInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}
func (m *AssetInfoReply) Reset()         { *m = AssetInfoReply{} }
func (m *AssetInfoReply) String() string { return proto.CompactTextString(m) }
func (*AssetInfoReply) ProtoMessage()    {}
func (*AssetInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{30}
}
func (m *AssetInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetInfoReply.Unmarshal(m, b)
}
func (m *AssetInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetInfoReply.Marshal(b, m, deterministic)
}
func (m *AssetInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetInfoReply.Merge(m, src)
}
func (m *AssetInfoReply) XXX_Size() int {
	return xxx_messageInfo_AssetInfoReply.Size(m)
}
func (m *AssetInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetInfoReply.DiscardUnknown(m)
}
var xxx_messageInfo_AssetInfoReply proto.InternalMessageInfo
func (m *AssetInfoReply) GetAssetInfo() *utils.AssetInfo {
	if m != nil {
		return m.AssetInfo
	}
	return nil
}
type Call struct {
	//    From       common.Address   `json:"from"`
	//    To         *common.Address  `json:"to"`
	//    Gas        hexutil.Uint64   `json:"gas"`
	//    GasPrice   hexutil.Big      `json:"gasPrice"`
	//    Value      hexutil.Big      `json:"value"`
	//    Data       hexutil.Bytes    `json:"data"`
	//    Action     uint64           `json:"action"`
	//    Vote       []types.Vote     `json:"vote"`
	//    Asset      *common.Address  `json:"asset"`
	//    AssetInfo  *SendTxAssetInfo `json:"assetInfo,omitempty"`
	//    SubAddress string           `json:"subAddress"`
	//    Abi        string           `json:"abi"`
	From                 []byte                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   []byte                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Gas                  uint64                 `protobuf:"fixed64,3,opt,name=gas,proto3" json:"gas,omitempty"`
	GasPrice             []byte                 `protobuf:"bytes,4,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	Value                []byte                 `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Data                 []byte                 `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Action               uint64                 `protobuf:"fixed64,7,opt,name=action,proto3" json:"action,omitempty"`
	Vote                 []*utils.Vote          `protobuf:"bytes,8,rep,name=vote,proto3" json:"vote,omitempty"`
	Asset                []byte                 `protobuf:"bytes,9,opt,name=asset,proto3" json:"asset,omitempty"`
	AssetInfo            *utils.SendTxAssetInfo `protobuf:"bytes,10,opt,name=assetInfo,proto3" json:"assetInfo,omitempty"`
	SubAddress           string                 `protobuf:"bytes,11,opt,name=subAddress,proto3" json:"subAddress,omitempty"`
	Abi                  string                 `protobuf:"bytes,12,opt,name=abi,proto3" json:"abi,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}
func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{31}
}
func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (m *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(m, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}
var xxx_messageInfo_Call proto.InternalMessageInfo
func (m *Call) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}
func (m *Call) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}
func (m *Call) GetGas() uint64 {
	if m != nil {
		return m.Gas
	}
	return 0
}
func (m *Call) GetGasPrice() []byte {
	if m != nil {
		return m.GasPrice
	}
	return nil
}
func (m *Call) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}
func (m *Call) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}
func (m *Call) GetAction() uint64 {
	if m != nil {
		return m.Action
	}
	return 0
}
func (m *Call) GetVote() []*utils.Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}
func (m *Call) GetAsset() []byte {
	if m != nil {
		return m.Asset
	}
	return nil
}
func (m *Call) GetAssetInfo() *utils.SendTxAssetInfo {
	if m != nil {
		return m.AssetInfo
	}
	return nil
}
func (m *Call) GetSubAddress() string {
	if m != nil {
		return m.SubAddress
	}
	return ""
}
func (m *Call) GetAbi() string {
	if m != nil {
		return m.Abi
	}
	return ""
}
type Candidate struct {
	//    Address      string `json:"address"`
	//    Vote         uint64 `json:"vote"`         // 投票数
	//    Nickname     string `json:"nickname"`     // delegate name
	//    RegisterTime uint64 `json:"registerTime"` // 注册时间
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Vote                 uint64   `protobuf:"fixed64,2,opt,name=vote,proto3" json:"vote,omitempty"`
	Nickname             string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	RegisterTime         uint64   `protobuf:"fixed64,4,opt,name=registerTime,proto3" json:"registerTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f735a774a6f5ee0b, []int{32}
}
func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (m *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(m, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}
var xxx_messageInfo_Candidate proto.InternalMessageInfo
func (m *Candidate) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}
func (m *Candidate) GetVote() uint64 {
	if m != nil {
		return m.Vote
	}
	return 0
}
func (m *Candidate) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}
func (m *Candidate) GetRegisterTime() uint64 {
	if m != nil {
		return m.RegisterTime
	}
	return 0
}
func init() {
	proto.RegisterType((*BlockNumberRequest)(nil), "blockchain.BlockNumberRequest")
	proto.RegisterType((*BlockNumberReply)(nil), "blockchain.BlockNumberReply")
	proto.RegisterType((*BalanceRequest)(nil), "blockchain.BalanceRequest")
	proto.RegisterType((*BalanceReply)(nil), "blockchain.BalanceReply")
	proto.RegisterType((*AssetBalanceRequest)(nil), "blockchain.AssetBalanceRequest")
	proto.RegisterType((*AssetBalanceReply)(nil), "blockchain.AssetBalanceReply")
	proto.RegisterType((*DetailBalanceRequest)(nil), "blockchain.DetailBalanceRequest")
	proto.RegisterType((*DetailBalanceReply)(nil), "blockchain.DetailBalanceReply")
	proto.RegisterMapType((map[string][]byte)(nil), "blockchain.DetailBalanceReply.AssetBalanceEntry")
	proto.RegisterType((*DelegateListRequest)(nil), "blockchain.DelegateListRequest")
	proto.RegisterType((*DelegateListReply)(nil), "blockchain.DelegateListReply")
	proto.RegisterType((*DelegateRequest)(nil), "blockchain.DelegateRequest")
	proto.RegisterType((*DelegateReply)(nil), "blockchain.DelegateReply")
	proto.RegisterType((*VotesNumberRequest)(nil), "blockchain.VotesNumberRequest")
	proto.RegisterType((*VotesNumberReply)(nil), "blockchain.VotesNumberReply")
	proto.RegisterType((*VotesListRequest)(nil), "blockchain.VotesListRequest")
	proto.RegisterType((*VotesListReply)(nil), "blockchain.VotesListReply")
	proto.RegisterType((*BlockRequest)(nil), "blockchain.BlockRequest")
	proto.RegisterType((*BlockReply)(nil), "blockchain.BlockReply")
	proto.RegisterType((*Block)(nil), "blockchain.Block")
	proto.RegisterType((*CodeRequest)(nil), "blockchain.CodeRequest")
	proto.RegisterType((*CodeReply)(nil), "blockchain.CodeReply")
	proto.RegisterType((*AbiRequest)(nil), "blockchain.AbiRequest")
	proto.RegisterType((*AbiReply)(nil), "blockchain.AbiReply")
	proto.RegisterType((*StorageRequest)(nil), "blockchain.StorageRequest")
	proto.RegisterType((*StorageReply)(nil), "blockchain.StorageReply")
	proto.RegisterType((*CallRequest)(nil), "blockchain.CallRequest")
	proto.RegisterType((*CallReply)(nil), "blockchain.CallReply")
	proto.RegisterType((*EstimateGasRequest)(nil), "blockchain.EstimateGasRequest")
	proto.RegisterType((*EstimateGasReply)(nil), "blockchain.EstimateGasReply")
	proto.RegisterType((*AssetInfoRequest)(nil), "blockchain.AssetInfoRequest")
	proto.RegisterType((*AssetInfoReply)(nil), "blockchain.AssetInfoReply")
	proto.RegisterType((*Call)(nil), "blockchain.Call")
	proto.RegisterType((*Candidate)(nil), "blockchain.Candidate")
}
func init() { proto.RegisterFile("blockchain/blockchain.proto", fileDescriptor_f735a774a6f5ee0b) }
var fileDescriptor_f735a774a6f5ee0b = []byte{
	// 1330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x5b, 0x6f, 0x1b, 0x45,
	0x14, 0x8e, 0x2f, 0xb1, 0xe3, 0x63, 0xd7, 0x75, 0xa6, 0x69, 0xb2, 0xb8, 0x21, 0xb1, 0x16, 0x1e,
	0xac, 0x22, 0x5c, 0xd4, 0x56, 0x22, 0x2a, 0x42, 0x90, 0x4b, 0x69, 0x8a, 0x42, 0x15, 0x6d, 0xdc,
	0x3e, 0x21, 0xa4, 0xb1, 0x3d, 0xd9, 0xac, 0xb2, 0xde, 0x35, 0x3b, 0xe3, 0x28, 0xe6, 0x19, 0x89,
	0x07, 0x7e, 0x11, 0xff, 0x0e, 0xcd, 0x6d, 0x77, 0xc6, 0xbb, 0x49, 0x03, 0xcd, 0xdb, 0xce, 0x39,
	0x67, 0xbe, 0x73, 0x99, 0x73, 0xb3, 0xe1, 0xc9, 0x28, 0x8c, 0xc7, 0x97, 0xe3, 0x0b, 0x1c, 0x44,
	0xcf, 0xb2, 0xcf, 0xc1, 0x2c, 0x89, 0x59, 0x8c, 0x20, 0xa3, 0x74, 0xd1, 0x9c, 0x05, 0x21, 0x7d,
	0x36, 0x8e, 0xa7, 0xd3, 0x58, 0xf1, 0xdd, 0x0d, 0x40, 0x07, 0x5c, 0xe2, 0xdd, 0x7c, 0x3a, 0x22,
	0x89, 0x47, 0x7e, 0x9f, 0x13, 0xca, 0xdc, 0x97, 0xd0, 0xb1, 0xa8, 0xb3, 0x70, 0x81, 0x7a, 0xd0,
	0x1c, 0x65, 0x34, 0xa7, 0xd4, 0x2b, 0xf5, 0x5b, 0x9e, 0x49, 0x72, 0x4f, 0xa0, 0x7d, 0x80, 0x43,
	0x1c, 0x8d, 0x89, 0xc2, 0x41, 0x0e, 0xd4, 0xf1, 0x64, 0x92, 0x10, 0x4a, 0x95, 0xbc, 0x3e, 0x2e,
	0xa3, 0x95, 0x7b, 0xa5, 0x7e, 0xc5, 0x46, 0xeb, 0x43, 0x2b, 0x45, 0xe3, 0xfa, 0x1d, 0xa8, 0x8f,
	0xe4, 0x59, 0x63, 0xa9, 0xa3, 0xeb, 0xc3, 0xa3, 0x7d, 0x4a, 0x09, 0xbb, 0xb3, 0xf2, 0x0d, 0x58,
	0xc5, 0xfc, 0x82, 0x50, 0xdb, 0xf2, 0xe4, 0x61, 0xd9, 0xa4, 0x4a, 0xde, 0xa4, 0xaf, 0x61, 0xdd,
	0x56, 0x74, 0xbb, 0x5d, 0x1e, 0x6c, 0x1c, 0x11, 0x86, 0x83, 0xf0, 0x1e, 0xa3, 0xf2, 0x77, 0x19,
	0xd0, 0x12, 0xe8, 0xad, 0x46, 0x70, 0x48, 0x7e, 0x5d, 0x49, 0x2b, 0x8f, 0x4d, 0x12, 0x72, 0xa1,
	0xc5, 0x62, 0x86, 0x35, 0xa0, 0x70, 0xbc, 0xe5, 0x59, 0x34, 0x34, 0x84, 0x16, 0x36, 0x3c, 0x77,
	0xaa, 0xbd, 0x4a, 0xbf, 0xf9, 0xfc, 0x9b, 0x81, 0x91, 0x6f, 0x79, 0xab, 0x06, 0x66, 0xb0, 0x5e,
	0x47, 0x2c, 0x59, 0x78, 0x16, 0x4a, 0xf7, 0x07, 0x3b, 0x9e, 0x42, 0x04, 0x75, 0xa0, 0x72, 0x49,
	0x16, 0xc2, 0x8d, 0x86, 0xc7, 0x3f, 0xf9, 0x73, 0x5d, 0xe1, 0x70, 0xae, 0x8d, 0x97, 0x87, 0x57,
	0xe5, 0xbd, 0x92, 0xfb, 0x2d, 0x3c, 0x3a, 0x22, 0x21, 0xf1, 0x31, 0x23, 0x27, 0x01, 0x65, 0x3a,
	0xc0, 0x05, 0xa9, 0xba, 0x14, 0xc6, 0x63, 0x58, 0xb7, 0x2f, 0xf2, 0x20, 0xbe, 0x80, 0xc6, 0x18,
	0x47, 0x93, 0x60, 0x82, 0x19, 0x0f, 0x23, 0xf7, 0xf0, 0xb1, 0xe9, 0xe1, 0xa1, 0x66, 0x7a, 0x99,
	0x9c, 0xfb, 0x15, 0x3c, 0xd4, 0x48, 0x1f, 0x7d, 0x5f, 0xf7, 0x08, 0x1e, 0x64, 0xc2, 0x05, 0x2a,
	0x4b, 0x77, 0x52, 0x79, 0x0a, 0xe8, 0x43, 0xcc, 0x08, 0xb5, 0x6a, 0xf6, 0x93, 0xb2, 0xea, 0x29,
	0x74, 0x2c, 0x44, 0x6e, 0xda, 0x26, 0xd4, 0x22, 0xb3, 0xd4, 0xd5, 0xc9, 0x7d, 0xa7, 0x64, 0xcd,
	0x80, 0x7f, 0x9a, 0xee, 0xb6, 0x81, 0xa7, 0x92, 0x39, 0x43, 0xab, 0x98, 0xf1, 0xfb, 0x15, 0x5a,
	0xa2, 0x2f, 0xdd, 0xf9, 0xa1, 0xb9, 0x17, 0xe7, 0xf3, 0x30, 0x1c, 0x5e, 0x0b, 0xd5, 0x6b, 0x9e,
	0x3a, 0x21, 0x04, 0xd5, 0x0b, 0x4c, 0x2f, 0x54, 0xb2, 0x8b, 0x6f, 0xf7, 0xaf, 0x55, 0x00, 0x05,
	0x7f, 0x4b, 0x00, 0xd2, 0xab, 0xe5, 0xec, 0x2a, 0xda, 0x01, 0x98, 0xe1, 0x84, 0x44, 0xec, 0x38,
	0x03, 0x35, 0x28, 0x68, 0x1b, 0x1a, 0x94, 0xf1, 0x67, 0x8c, 0x63, 0xe6, 0x54, 0x05, 0x3b, 0x23,
	0xf0, 0x0a, 0x9c, 0xe8, 0xb4, 0xe0, 0x02, 0xab, 0xb2, 0x02, 0x4d, 0x1a, 0x7a, 0x0a, 0x9d, 0x2b,
	0x1c, 0xf2, 0x04, 0x88, 0x93, 0x7d, 0x15, 0x9d, 0x9a, 0x90, 0xcb, 0xd1, 0xb9, 0x36, 0x72, 0xcd,
	0x12, 0x7c, 0x84, 0x19, 0x76, 0xea, 0x52, 0x5b, 0x4a, 0xe0, 0xf6, 0xd3, 0xe0, 0x0f, 0xe2, 0xac,
	0xf5, 0x4a, 0xfd, 0x9a, 0x27, 0xbe, 0x51, 0x17, 0xd6, 0x7c, 0x4c, 0x4f, 0x82, 0x69, 0xc0, 0x9c,
	0x86, 0xa0, 0xa7, 0x67, 0xfe, 0x1c, 0x3e, 0xa6, 0xef, 0x29, 0x99, 0x38, 0x20, 0x58, 0xfa, 0xc8,
	0xf5, 0xb0, 0x60, 0x4a, 0x28, 0xc3, 0xd3, 0x99, 0xd3, 0x94, 0x7a, 0x52, 0x02, 0xb7, 0x98, 0x25,
	0x38, 0xa2, 0x78, 0xcc, 0x82, 0x38, 0xa2, 0xc2, 0xb3, 0x96, 0xb4, 0x78, 0x99, 0xce, 0x23, 0x90,
	0x90, 0x31, 0x09, 0x66, 0x4c, 0xca, 0x3d, 0x90, 0x11, 0x30, 0x69, 0x5c, 0x5b, 0xea, 0xa9, 0xd3,
	0x96, 0xda, 0x52, 0x02, 0xda, 0x83, 0x2d, 0x7a, 0x31, 0x3f, 0x3f, 0x0f, 0x89, 0x59, 0xd8, 0xe2,
	0x39, 0x1e, 0x0a, 0xd9, 0x9b, 0xd8, 0x68, 0x00, 0x48, 0xb1, 0x8c, 0x99, 0xe7, 0x74, 0xc4, 0xa5,
	0x02, 0x0e, 0xfa, 0x1e, 0xda, 0xc9, 0x6c, 0x3c, 0xcc, 0x5c, 0x70, 0xd6, 0x55, 0xe1, 0x8a, 0xf9,
	0x3a, 0xf0, 0x2c, 0xa6, 0xb7, 0x24, 0x2c, 0xda, 0xad, 0xe1, 0xbe, 0x83, 0x44, 0x8a, 0x5b, 0x34,
	0xb7, 0x0e, 0xab, 0x42, 0xa3, 0xfb, 0x16, 0x9a, 0x87, 0xf1, 0xe4, 0x5e, 0x26, 0xc7, 0x2e, 0x34,
	0x24, 0x14, 0xcf, 0x6d, 0x04, 0xd5, 0x71, 0x3c, 0xd1, 0xc3, 0x42, 0x7c, 0xbb, 0xc7, 0x00, 0xfb,
	0xa3, 0xe0, 0x3e, 0x54, 0x6d, 0xc3, 0x9a, 0x40, 0xe2, 0x9a, 0x3a, 0x50, 0xc1, 0xa3, 0x40, 0xb7,
	0x73, 0x3c, 0x0a, 0xdc, 0xdf, 0xa0, 0x7d, 0xc6, 0xe2, 0x04, 0xfb, 0x77, 0x70, 0x4b, 0x0d, 0x83,
	0x72, 0x36, 0x0c, 0x3e, 0x3e, 0xa5, 0xfb, 0xd0, 0x4a, 0xf1, 0x55, 0x3b, 0xa1, 0xf2, 0xac, 0xd1,
	0xd5, 0xd1, 0x7d, 0x0f, 0xcd, 0x43, 0x1c, 0x86, 0xda, 0x8c, 0x2f, 0xa1, 0x3a, 0xc6, 0x61, 0xa8,
	0xfa, 0x70, 0xc7, 0xee, 0xc3, 0x61, 0xe8, 0x09, 0xee, 0x1d, 0xdc, 0xff, 0x02, 0x1a, 0x12, 0x56,
	0x75, 0x91, 0x84, 0xd0, 0x79, 0xc8, 0x74, 0x17, 0x91, 0x27, 0xf7, 0x15, 0xa0, 0xd7, 0x94, 0x05,
	0x53, 0xcc, 0xc8, 0x1b, 0x4c, 0xff, 0x93, 0x09, 0xbc, 0x5d, 0x5b, 0x77, 0xf3, 0x7a, 0x6a, 0xa9,
	0x9e, 0x3e, 0x74, 0xc4, 0x8c, 0x7d, 0x1b, 0x9d, 0xc7, 0x5a, 0x4b, 0xba, 0xff, 0x94, 0x8c, 0xfd,
	0xc7, 0xfd, 0x11, 0xda, 0x86, 0x24, 0xc7, 0x1c, 0x40, 0x03, 0x6b, 0x4a, 0x6a, 0x92, 0x4c, 0xf2,
	0x4c, 0x32, 0x13, 0x71, 0xff, 0x29, 0x43, 0x95, 0x9b, 0xc9, 0xd3, 0xeb, 0x3c, 0x89, 0xa7, 0x3a,
	0xbd, 0xf8, 0x37, 0x6a, 0x43, 0x99, 0xc5, 0xaa, 0x69, 0x96, 0x59, 0xcc, 0x9f, 0xd6, 0xc7, 0x54,
	0x3c, 0x60, 0xcd, 0xe3, 0x9f, 0xaa, 0x09, 0x9d, 0x26, 0x81, 0x58, 0x30, 0xb8, 0x5c, 0x7a, 0xce,
	0x76, 0x80, 0x55, 0x63, 0x07, 0xe0, 0x7a, 0x26, 0xbc, 0xc7, 0xc9, 0x46, 0x28, 0xbe, 0x79, 0x20,
	0x54, 0x59, 0xd6, 0x65, 0x20, 0x54, 0xdd, 0xed, 0x42, 0xf5, 0x2a, 0x66, 0xbc, 0xed, 0xf1, 0xc1,
	0xde, 0x54, 0x7e, 0xf0, 0xd1, 0xe3, 0x09, 0x46, 0x16, 0x95, 0x86, 0xb9, 0x15, 0xbe, 0x34, 0x63,
	0x00, 0x22, 0x06, 0x9b, 0xea, 0xee, 0x19, 0x89, 0x26, 0xc3, 0xeb, 0xa2, 0x48, 0xf0, 0x79, 0x40,
	0xe7, 0x23, 0xdd, 0xa7, 0x9b, 0x22, 0x7d, 0x0d, 0x8a, 0xae, 0x8a, 0x56, 0x56, 0x15, 0x0b, 0x9e,
	0x34, 0x6a, 0xc2, 0x2f, 0x17, 0x44, 0x23, 0x2b, 0x08, 0xa4, 0xbc, 0x28, 0xcb, 0xe6, 0x2d, 0x0c,
	0xef, 0xc2, 0x5a, 0x14, 0x8c, 0x2f, 0x23, 0x3c, 0x95, 0xcb, 0x5b, 0xc3, 0x4b, 0xcf, 0xb2, 0xb1,
	0xfa, 0x01, 0x65, 0x24, 0x19, 0x06, 0x53, 0x19, 0xd7, 0x9a, 0x67, 0xd1, 0x9e, 0xff, 0x09, 0x6a,
	0xee, 0x1d, 0xf2, 0x44, 0x43, 0xbf, 0x58, 0x09, 0x8e, 0x76, 0xcc, 0x24, 0xcc, 0xff, 0x56, 0xe8,
	0x6e, 0xdf, 0xc8, 0x9f, 0x85, 0x0b, 0x77, 0x05, 0x1d, 0x01, 0xf8, 0xe9, 0x8a, 0x87, 0xba, 0x96,
	0xb4, 0xb5, 0x17, 0x77, 0x9d, 0x42, 0x9e, 0x44, 0x39, 0x83, 0x87, 0x3e, 0x61, 0xe6, 0xb6, 0x88,
	0x76, 0x4d, 0xf1, 0x82, 0x1f, 0x00, 0xdd, 0xcf, 0x6f, 0x16, 0x90, 0xa0, 0x1f, 0xa0, 0xe3, 0x13,
	0x66, 0x2d, 0xae, 0xa8, 0x77, 0xcb, 0x4e, 0x2b, 0x61, 0x77, 0x6e, 0xdf, 0x7a, 0x53, 0x63, 0xcd,
	0x41, 0x63, 0x1b, 0x5b, 0xb0, 0xb3, 0xda, 0xc6, 0xe6, 0x76, 0x53, 0x61, 0x2c, 0xf2, 0x09, 0x1b,
	0xc6, 0xb3, 0x7b, 0xc6, 0x7d, 0x03, 0x4d, 0xc3, 0x58, 0xf4, 0xa4, 0x48, 0x5e, 0x83, 0x7d, 0x56,
	0xcc, 0x94, 0x40, 0xa7, 0xd0, 0xf6, 0x09, 0x33, 0xf6, 0x48, 0x3b, 0x75, 0xf2, 0x2b, 0xab, 0x9d,
	0x3a, 0xcb, 0x0b, 0xa8, 0xbb, 0x82, 0x7e, 0x86, 0x96, 0x46, 0x14, 0xce, 0xe6, 0xe5, 0x4d, 0x4f,
	0xbb, 0x37, 0x70, 0x25, 0xd6, 0x4f, 0xe2, 0xad, 0x45, 0x7e, 0x1e, 0x2c, 0x94, 0x7d, 0x4e, 0x2e,
	0x75, 0x35, 0xd6, 0x66, 0x01, 0x47, 0xa7, 0x73, 0x3b, 0xc3, 0x11, 0xfb, 0xc3, 0xff, 0x41, 0xf9,
	0x0e, 0xea, 0x3e, 0x61, 0x7c, 0x1e, 0xa3, 0x2d, 0xab, 0xc9, 0x67, 0xc3, 0xbe, 0xfb, 0x38, 0xcf,
	0x90, 0x97, 0xf7, 0xa0, 0xc6, 0x6b, 0x61, 0x14, 0x20, 0x4b, 0x41, 0x36, 0xbc, 0xbb, 0x1b, 0x39,
	0xba, 0x0e, 0x02, 0x0f, 0xa8, 0x9a, 0x8e, 0xfb, 0xcc, 0xae, 0x46, 0x7b, 0x28, 0xdb, 0xd5, 0x68,
	0x0e, 0x54, 0x61, 0x81, 0x9c, 0x85, 0x5b, 0xb9, 0x01, 0x55, 0x68, 0xbb, 0x1e, 0x86, 0xee, 0x0a,
	0x6f, 0x2e, 0x24, 0x1b, 0x5d, 0x76, 0x86, 0xe4, 0xe7, 0xa1, 0x9d, 0x21, 0xcb, 0x33, 0x2f, 0xcd,
	0x90, 0xb4, 0x05, 0xdb, 0x19, 0xb2, 0x3c, 0xf7, 0xec, 0x0c, 0xb1, 0x67, 0x9d, 0xbb, 0x32, 0xaa,
	0x89, 0x7f, 0x44, 0x5e, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x8f, 0xbd, 0xe3, 0x08, 0x50, 0x11,
	0x00, 0x00,
}
// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn
// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4
// BlockChainClient is the client API for BlockChain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockChainClient interface {
	BlockNumber(ctx context.Context, in *BlockNumberRequest, opts ...grpc.CallOption) (*BlockNumberReply, error)
	GetBalance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceReply, error)
	GetAssetBalance(ctx context.Context, in *AssetBalanceRequest, opts ...grpc.CallOption) (*AssetBalanceReply, error)
	GetDetailBalance(ctx context.Context, in *DetailBalanceRequest, opts ...grpc.CallOption) (*DetailBalanceReply, error)
	GetDelegateList(ctx context.Context, in *DelegateListRequest, opts ...grpc.CallOption) (*DelegateListReply, error)
	GetTopDelegateList(ctx context.Context, in *DelegateListRequest, opts ...grpc.CallOption) (*DelegateListReply, error)
	GetDelegate(ctx context.Context, in *DelegateRequest, opts ...grpc.CallOption) (*DelegateReply, error)
	GetVotesNumber(ctx context.Context, in *VotesNumberRequest, opts ...grpc.CallOption) (*VotesNumberReply, error)
	GetVotesList(ctx context.Context, in *VotesListRequest, opts ...grpc.CallOption) (*VotesListReply, error)
	GetBlockByNumber(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockReply, error)
	GetBlockByHash(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockReply, error)
	GetCode(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*CodeReply, error)
	GetAbi(ctx context.Context, in *AbiRequest, opts ...grpc.CallOption) (*AbiReply, error)
	GetStorageAt(ctx context.Context, in *StorageRequest, opts ...grpc.CallOption) (*StorageReply, error)
	Call(ctx context.Context, in *CallRequest, opts ...grpc.CallOption) (*CallReply, error)
	EstimateGas(ctx context.Context, in *EstimateGasRequest, opts ...grpc.CallOption) (*EstimateGasReply, error)
	GetAssetInfo(ctx context.Context, in *AssetInfoRequest, opts ...grpc.CallOption) (*AssetInfoReply, error)
}
type blockChainClient struct {
	cc *grpc.ClientConn
}
func NewBlockChainClient(cc *grpc.ClientConn) BlockChainClient {
	return &blockChainClient{cc}
}
func (c *blockChainClient) BlockNumber(ctx context.Context, in *BlockNumberRequest, opts ...grpc.CallOption) (*BlockNumberReply, error) {
	out := new(BlockNumberReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/blockNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetBalance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceReply, error) {
	out := new(BalanceReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetAssetBalance(ctx context.Context, in *AssetBalanceRequest, opts ...grpc.CallOption) (*AssetBalanceReply, error) {
	out := new(AssetBalanceReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getAssetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetDetailBalance(ctx context.Context, in *DetailBalanceRequest, opts ...grpc.CallOption) (*DetailBalanceReply, error) {
	out := new(DetailBalanceReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getDetailBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetDelegateList(ctx context.Context, in *DelegateListRequest, opts ...grpc.CallOption) (*DelegateListReply, error) {
	out := new(DelegateListReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getDelegateList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetTopDelegateList(ctx context.Context, in *DelegateListRequest, opts ...grpc.CallOption) (*DelegateListReply, error) {
	out := new(DelegateListReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getTopDelegateList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetDelegate(ctx context.Context, in *DelegateRequest, opts ...grpc.CallOption) (*DelegateReply, error) {
	out := new(DelegateReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getDelegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetVotesNumber(ctx context.Context, in *VotesNumberRequest, opts ...grpc.CallOption) (*VotesNumberReply, error) {
	out := new(VotesNumberReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getVotesNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetVotesList(ctx context.Context, in *VotesListRequest, opts ...grpc.CallOption) (*VotesListReply, error) {
	out := new(VotesListReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getVotesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetBlockByNumber(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockReply, error) {
	out := new(BlockReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getBlockByNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetBlockByHash(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockReply, error) {
	out := new(BlockReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getBlockByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetCode(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*CodeReply, error) {
	out := new(CodeReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetAbi(ctx context.Context, in *AbiRequest, opts ...grpc.CallOption) (*AbiReply, error) {
	out := new(AbiReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getAbi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetStorageAt(ctx context.Context, in *StorageRequest, opts ...grpc.CallOption) (*StorageReply, error) {
	out := new(StorageReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getStorageAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) Call(ctx context.Context, in *CallRequest, opts ...grpc.CallOption) (*CallReply, error) {
	out := new(CallReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) EstimateGas(ctx context.Context, in *EstimateGasRequest, opts ...grpc.CallOption) (*EstimateGasReply, error) {
	out := new(EstimateGasReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/estimateGas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *blockChainClient) GetAssetInfo(ctx context.Context, in *AssetInfoRequest, opts ...grpc.CallOption) (*AssetInfoReply, error) {
	out := new(AssetInfoReply)
	err := c.cc.Invoke(ctx, "/blockchain.BlockChain/getAssetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
// BlockChainServer is the server API for BlockChain service.
type BlockChainServer interface {
	BlockNumber(context.Context, *BlockNumberRequest) (*BlockNumberReply, error)
	GetBalance(context.Context, *BalanceRequest) (*BalanceReply, error)
	GetAssetBalance(context.Context, *AssetBalanceRequest) (*AssetBalanceReply, error)
	GetDetailBalance(context.Context, *DetailBalanceRequest) (*DetailBalanceReply, error)
	GetDelegateList(context.Context, *DelegateListRequest) (*DelegateListReply, error)
	GetTopDelegateList(context.Context, *DelegateListRequest) (*DelegateListReply, error)
	GetDelegate(context.Context, *DelegateRequest) (*DelegateReply, error)
	GetVotesNumber(context.Context, *VotesNumberRequest) (*VotesNumberReply, error)
	GetVotesList(context.Context, *VotesListRequest) (*VotesListReply, error)
	GetBlockByNumber(context.Context, *BlockRequest) (*BlockReply, error)
	GetBlockByHash(context.Context, *BlockRequest) (*BlockReply, error)
	GetCode(context.Context, *CodeRequest) (*CodeReply, error)
	GetAbi(context.Context, *AbiRequest) (*AbiReply, error)
	GetStorageAt(context.Context, *StorageRequest) (*StorageReply, error)
	Call(context.Context, *CallRequest) (*CallReply, error)
	EstimateGas(context.Context, *EstimateGasRequest) (*EstimateGasReply, error)
	GetAssetInfo(context.Context, *AssetInfoRequest) (*AssetInfoReply, error)
}
// UnimplementedBlockChainServer can be embedded to have forward compatible implementations.
type UnimplementedBlockChainServer struct {
}
func (*UnimplementedBlockChainServer) BlockNumber(ctx context.Context, req *BlockNumberRequest) (*BlockNumberReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlockNumber not implemented")
}
func (*UnimplementedBlockChainServer) GetBalance(ctx context.Context, req *BalanceRequest) (*BalanceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedBlockChainServer) GetAssetBalance(ctx context.Context, req *AssetBalanceRequest) (*AssetBalanceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssetBalance not implemented")
}
func (*UnimplementedBlockChainServer) GetDetailBalance(ctx context.Context, req *DetailBalanceRequest) (*DetailBalanceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDetailBalance not implemented")
}
func (*UnimplementedBlockChainServer) GetDelegateList(ctx context.Context, req *DelegateListRequest) (*DelegateListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDelegateList not implemented")
}
func (*UnimplementedBlockChainServer) GetTopDelegateList(ctx context.Context, req *DelegateListRequest) (*DelegateListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopDelegateList not implemented")
}
func (*UnimplementedBlockChainServer) GetDelegate(ctx context.Context, req *DelegateRequest) (*DelegateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDelegate not implemented")
}
func (*UnimplementedBlockChainServer) GetVotesNumber(ctx context.Context, req *VotesNumberRequest) (*VotesNumberReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVotesNumber not implemented")
}
func (*UnimplementedBlockChainServer) GetVotesList(ctx context.Context, req *VotesListRequest) (*VotesListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVotesList not implemented")
}
func (*UnimplementedBlockChainServer) GetBlockByNumber(ctx context.Context, req *BlockRequest) (*BlockReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByNumber not implemented")
}
func (*UnimplementedBlockChainServer) GetBlockByHash(ctx context.Context, req *BlockRequest) (*BlockReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByHash not implemented")
}
func (*UnimplementedBlockChainServer) GetCode(ctx context.Context, req *CodeRequest) (*CodeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCode not implemented")
}
func (*UnimplementedBlockChainServer) GetAbi(ctx context.Context, req *AbiRequest) (*AbiReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAbi not implemented")
}
func (*UnimplementedBlockChainServer) GetStorageAt(ctx context.Context, req *StorageRequest) (*StorageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStorageAt not implemented")
}
func (*UnimplementedBlockChainServer) Call(ctx context.Context, req *CallRequest) (*CallReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}
func (*UnimplementedBlockChainServer) EstimateGas(ctx context.Context, req *EstimateGasRequest) (*EstimateGasReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EstimateGas not implemented")
}
func (*UnimplementedBlockChainServer) GetAssetInfo(ctx context.Context, req *AssetInfoRequest) (*AssetInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssetInfo not implemented")
}
func RegisterBlockChainServer(s *grpc.Server, srv BlockChainServer) {
	s.RegisterService(&_BlockChain_serviceDesc, srv)
}
func _BlockChain_BlockNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).BlockNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/BlockNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).BlockNumber(ctx, req.(*BlockNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetBalance(ctx, req.(*BalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetAssetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetAssetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetAssetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetAssetBalance(ctx, req.(*AssetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetDetailBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetDetailBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetDetailBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetDetailBalance(ctx, req.(*DetailBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetDelegateList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelegateListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetDelegateList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetDelegateList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetDelegateList(ctx, req.(*DelegateListRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetTopDelegateList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelegateListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetTopDelegateList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetTopDelegateList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetTopDelegateList(ctx, req.(*DelegateListRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetDelegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelegateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetDelegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetDelegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetDelegate(ctx, req.(*DelegateRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetVotesNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VotesNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetVotesNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetVotesNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetVotesNumber(ctx, req.(*VotesNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetVotesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VotesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetVotesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetVotesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetVotesList(ctx, req.(*VotesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetBlockByNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetBlockByNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetBlockByNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetBlockByNumber(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetBlockByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetBlockByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetBlockByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetBlockByHash(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetCode(ctx, req.(*CodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetAbi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AbiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetAbi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetAbi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetAbi(ctx, req.(*AbiRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetStorageAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetStorageAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetStorageAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetStorageAt(ctx, req.(*StorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).Call(ctx, req.(*CallRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_EstimateGas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstimateGasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).EstimateGas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/EstimateGas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).EstimateGas(ctx, req.(*EstimateGasRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _BlockChain_GetAssetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetAssetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.BlockChain/GetAssetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetAssetInfo(ctx, req.(*AssetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}
var _BlockChain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blockchain.BlockChain",
	HandlerType: (*BlockChainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "blockNumber",
			Handler:    _BlockChain_BlockNumber_Handler,
		},
		{
			MethodName: "getBalance",
			Handler:    _BlockChain_GetBalance_Handler,
		},
		{
			MethodName: "getAssetBalance",
			Handler:    _BlockChain_GetAssetBalance_Handler,
		},
		{
			MethodName: "getDetailBalance",
			Handler:    _BlockChain_GetDetailBalance_Handler,
		},
		{
			MethodName: "getDelegateList",
			Handler:    _BlockChain_GetDelegateList_Handler,
		},
		{
			MethodName: "getTopDelegateList",
			Handler:    _BlockChain_GetTopDelegateList_Handler,
		},
		{
			MethodName: "getDelegate",
			Handler:    _BlockChain_GetDelegate_Handler,
		},
		{
			MethodName: "getVotesNumber",
			Handler:    _BlockChain_GetVotesNumber_Handler,
		},
		{
			MethodName: "getVotesList",
			Handler:    _BlockChain_GetVotesList_Handler,
		},
		{
			MethodName: "getBlockByNumber",
			Handler:    _BlockChain_GetBlockByNumber_Handler,
		},
		{
			MethodName: "getBlockByHash",
			Handler:    _BlockChain_GetBlockByHash_Handler,
		},
		{
			MethodName: "getCode",
			Handler:    _BlockChain_GetCode_Handler,
		},
		{
			MethodName: "getAbi",
			Handler:    _BlockChain_GetAbi_Handler,
		},
		{
			MethodName: "getStorageAt",
			Handler:    _BlockChain_GetStorageAt_Handler,
		},
		{
			MethodName: "call",
			Handler:    _BlockChain_Call_Handler,
		},
		{
			MethodName: "estimateGas",
			Handler:    _BlockChain_EstimateGas_Handler,
		},
		{
			MethodName: "getAssetInfo",
			Handler:    _BlockChain_GetAssetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blockchain/blockchain.proto",
}