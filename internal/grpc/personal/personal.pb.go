// Code generated by protoc-gen-go. DO NOT EDIT.
// source: personal/personal.proto
package personal
import (
	context "context"
	fmt "fmt"
	utils "github.com/Aurorachain/go-aoa/internal/grpc/utils"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)
// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
type RawWalletRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *RawWalletRequest) Reset()         { *m = RawWalletRequest{} }
func (m *RawWalletRequest) String() string { return proto.CompactTextString(m) }
func (*RawWalletRequest) ProtoMessage()    {}
func (*RawWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{0}
}
func (m *RawWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawWalletRequest.Unmarshal(m, b)
}
func (m *RawWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawWalletRequest.Marshal(b, m, deterministic)
}
func (m *RawWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawWalletRequest.Merge(m, src)
}
func (m *RawWalletRequest) XXX_Size() int {
	return xxx_messageInfo_RawWalletRequest.Size(m)
}
func (m *RawWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RawWalletRequest.DiscardUnknown(m)
}
var xxx_messageInfo_RawWalletRequest proto.InternalMessageInfo
type RawWalletReply struct {
	RawWallets           []*RawWallet `protobuf:"bytes,1,rep,name=rawWallets,proto3" json:"rawWallets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}
func (m *RawWalletReply) Reset()         { *m = RawWalletReply{} }
func (m *RawWalletReply) String() string { return proto.CompactTextString(m) }
func (*RawWalletReply) ProtoMessage()    {}
func (*RawWalletReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{1}
}
func (m *RawWalletReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawWalletReply.Unmarshal(m, b)
}
func (m *RawWalletReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawWalletReply.Marshal(b, m, deterministic)
}
func (m *RawWalletReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawWalletReply.Merge(m, src)
}
func (m *RawWalletReply) XXX_Size() int {
	return xxx_messageInfo_RawWalletReply.Size(m)
}
func (m *RawWalletReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RawWalletReply.DiscardUnknown(m)
}
var xxx_messageInfo_RawWalletReply proto.InternalMessageInfo
func (m *RawWalletReply) GetRawWallets() []*RawWallet {
	if m != nil {
		return m.RawWallets
	}
	return nil
}
type RawWallet struct {
	//    URL      string             `json:"url"`
	//    Status   string             `json:"status"`
	//    Failure  string             `json:"failure,omitempty"`
	//    Accounts []accounts.Account `json:"accounts,omitempty"`
	Url                  string     `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Status               string     `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Failure              string     `protobuf:"bytes,3,opt,name=failure,proto3" json:"failure,omitempty"`
	Accounts             []*Account `protobuf:"bytes,4,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}
func (m *RawWallet) Reset()         { *m = RawWallet{} }
func (m *RawWallet) String() string { return proto.CompactTextString(m) }
func (*RawWallet) ProtoMessage()    {}
func (*RawWallet) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{2}
}
func (m *RawWallet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawWallet.Unmarshal(m, b)
}
func (m *RawWallet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawWallet.Marshal(b, m, deterministic)
}
func (m *RawWallet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawWallet.Merge(m, src)
}
func (m *RawWallet) XXX_Size() int {
	return xxx_messageInfo_RawWallet.Size(m)
}
func (m *RawWallet) XXX_DiscardUnknown() {
	xxx_messageInfo_RawWallet.DiscardUnknown(m)
}
var xxx_messageInfo_RawWallet proto.InternalMessageInfo
func (m *RawWallet) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}
func (m *RawWallet) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}
func (m *RawWallet) GetFailure() string {
	if m != nil {
		return m.Failure
	}
	return ""
}
func (m *RawWallet) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}
type Account struct {
	//Address common.Address `json:"address"` // Aurora account address derived from the key
	//URL     URL            `json:"url"`     // Optional resource locator within a backend
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Url                  *Url     `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{3}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}
var xxx_messageInfo_Account proto.InternalMessageInfo
func (m *Account) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *Account) GetUrl() *Url {
	if m != nil {
		return m.Url
	}
	return nil
}
type Url struct {
	//Scheme string // Protocol scheme to identify a capable account backend
	//Path   string // Path for the backend to identify a unique entity
	Scheme               string   `protobuf:"bytes,1,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *Url) Reset()         { *m = Url{} }
func (m *Url) String() string { return proto.CompactTextString(m) }
func (*Url) ProtoMessage()    {}
func (*Url) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{4}
}
func (m *Url) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Url.Unmarshal(m, b)
}
func (m *Url) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Url.Marshal(b, m, deterministic)
}
func (m *Url) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Url.Merge(m, src)
}
func (m *Url) XXX_Size() int {
	return xxx_messageInfo_Url.Size(m)
}
func (m *Url) XXX_DiscardUnknown() {
	xxx_messageInfo_Url.DiscardUnknown(m)
}
var xxx_messageInfo_Url proto.InternalMessageInfo
func (m *Url) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}
func (m *Url) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}
type OpenWalletRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Passphrase           string   `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *OpenWalletRequest) Reset()         { *m = OpenWalletRequest{} }
func (m *OpenWalletRequest) String() string { return proto.CompactTextString(m) }
func (*OpenWalletRequest) ProtoMessage()    {}
func (*OpenWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{5}
}
func (m *OpenWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenWalletRequest.Unmarshal(m, b)
}
func (m *OpenWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenWalletRequest.Marshal(b, m, deterministic)
}
func (m *OpenWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenWalletRequest.Merge(m, src)
}
func (m *OpenWalletRequest) XXX_Size() int {
	return xxx_messageInfo_OpenWalletRequest.Size(m)
}
func (m *OpenWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenWalletRequest.DiscardUnknown(m)
}
var xxx_messageInfo_OpenWalletRequest proto.InternalMessageInfo
func (m *OpenWalletRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}
func (m *OpenWalletRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}
type OpenWalletReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *OpenWalletReply) Reset()         { *m = OpenWalletReply{} }
func (m *OpenWalletReply) String() string { return proto.CompactTextString(m) }
func (*OpenWalletReply) ProtoMessage()    {}
func (*OpenWalletReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{6}
}
func (m *OpenWalletReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenWalletReply.Unmarshal(m, b)
}
func (m *OpenWalletReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenWalletReply.Marshal(b, m, deterministic)
}
func (m *OpenWalletReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenWalletReply.Merge(m, src)
}
func (m *OpenWalletReply) XXX_Size() int {
	return xxx_messageInfo_OpenWalletReply.Size(m)
}
func (m *OpenWalletReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenWalletReply.DiscardUnknown(m)
}
var xxx_messageInfo_OpenWalletReply proto.InternalMessageInfo
type DeriveAccountRequest struct {
	//    url string, path string, pin *bool
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Pin                  bool     `protobuf:"varint,3,opt,name=pin,proto3" json:"pin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *DeriveAccountRequest) Reset()         { *m = DeriveAccountRequest{} }
func (m *DeriveAccountRequest) String() string { return proto.CompactTextString(m) }
func (*DeriveAccountRequest) ProtoMessage()    {}
func (*DeriveAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{7}
}
func (m *DeriveAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeriveAccountRequest.Unmarshal(m, b)
}
func (m *DeriveAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeriveAccountRequest.Marshal(b, m, deterministic)
}
func (m *DeriveAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeriveAccountRequest.Merge(m, src)
}
func (m *DeriveAccountRequest) XXX_Size() int {
	return xxx_messageInfo_DeriveAccountRequest.Size(m)
}
func (m *DeriveAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeriveAccountRequest.DiscardUnknown(m)
}
var xxx_messageInfo_DeriveAccountRequest proto.InternalMessageInfo
func (m *DeriveAccountRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}
func (m *DeriveAccountRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}
func (m *DeriveAccountRequest) GetPin() bool {
	if m != nil {
		return m.Pin
	}
	return false
}
type NewAccountRequest struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *NewAccountRequest) Reset()         { *m = NewAccountRequest{} }
func (m *NewAccountRequest) String() string { return proto.CompactTextString(m) }
func (*NewAccountRequest) ProtoMessage()    {}
func (*NewAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{8}
}
func (m *NewAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAccountRequest.Unmarshal(m, b)
}
func (m *NewAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAccountRequest.Marshal(b, m, deterministic)
}
func (m *NewAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAccountRequest.Merge(m, src)
}
func (m *NewAccountRequest) XXX_Size() int {
	return xxx_messageInfo_NewAccountRequest.Size(m)
}
func (m *NewAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAccountRequest.DiscardUnknown(m)
}
var xxx_messageInfo_NewAccountRequest proto.InternalMessageInfo
func (m *NewAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}
type NewAccountReply struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *NewAccountReply) Reset()         { *m = NewAccountReply{} }
func (m *NewAccountReply) String() string { return proto.CompactTextString(m) }
func (*NewAccountReply) ProtoMessage()    {}
func (*NewAccountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{9}
}
func (m *NewAccountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAccountReply.Unmarshal(m, b)
}
func (m *NewAccountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAccountReply.Marshal(b, m, deterministic)
}
func (m *NewAccountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAccountReply.Merge(m, src)
}
func (m *NewAccountReply) XXX_Size() int {
	return xxx_messageInfo_NewAccountReply.Size(m)
}
func (m *NewAccountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAccountReply.DiscardUnknown(m)
}
var xxx_messageInfo_NewAccountReply proto.InternalMessageInfo
func (m *NewAccountReply) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
type ImportRawKeyRequest struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *ImportRawKeyRequest) Reset()         { *m = ImportRawKeyRequest{} }
func (m *ImportRawKeyRequest) String() string { return proto.CompactTextString(m) }
func (*ImportRawKeyRequest) ProtoMessage()    {}
func (*ImportRawKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{10}
}
func (m *ImportRawKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportRawKeyRequest.Unmarshal(m, b)
}
func (m *ImportRawKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportRawKeyRequest.Marshal(b, m, deterministic)
}
func (m *ImportRawKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportRawKeyRequest.Merge(m, src)
}
func (m *ImportRawKeyRequest) XXX_Size() int {
	return xxx_messageInfo_ImportRawKeyRequest.Size(m)
}
func (m *ImportRawKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportRawKeyRequest.DiscardUnknown(m)
}
var xxx_messageInfo_ImportRawKeyRequest proto.InternalMessageInfo
func (m *ImportRawKeyRequest) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}
func (m *ImportRawKeyRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}
type ImportRawKeyReply struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *ImportRawKeyReply) Reset()         { *m = ImportRawKeyReply{} }
func (m *ImportRawKeyReply) String() string { return proto.CompactTextString(m) }
func (*ImportRawKeyReply) ProtoMessage()    {}
func (*ImportRawKeyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{11}
}
func (m *ImportRawKeyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportRawKeyReply.Unmarshal(m, b)
}
func (m *ImportRawKeyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportRawKeyReply.Marshal(b, m, deterministic)
}
func (m *ImportRawKeyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportRawKeyReply.Merge(m, src)
}
func (m *ImportRawKeyReply) XXX_Size() int {
	return xxx_messageInfo_ImportRawKeyReply.Size(m)
}
func (m *ImportRawKeyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportRawKeyReply.DiscardUnknown(m)
}
var xxx_messageInfo_ImportRawKeyReply proto.InternalMessageInfo
func (m *ImportRawKeyReply) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
type LockAccountRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Duration             uint64   `protobuf:"fixed64,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *LockAccountRequest) Reset()         { *m = LockAccountRequest{} }
func (m *LockAccountRequest) String() string { return proto.CompactTextString(m) }
func (*LockAccountRequest) ProtoMessage()    {}
func (*LockAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{12}
}
func (m *LockAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockAccountRequest.Unmarshal(m, b)
}
func (m *LockAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockAccountRequest.Marshal(b, m, deterministic)
}
func (m *LockAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockAccountRequest.Merge(m, src)
}
func (m *LockAccountRequest) XXX_Size() int {
	return xxx_messageInfo_LockAccountRequest.Size(m)
}
func (m *LockAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockAccountRequest.DiscardUnknown(m)
}
var xxx_messageInfo_LockAccountRequest proto.InternalMessageInfo
func (m *LockAccountRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *LockAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}
func (m *LockAccountRequest) GetDuration() uint64 {
	if m != nil {
		return m.Duration
	}
	return 0
}
type LockAccountReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *LockAccountReply) Reset()         { *m = LockAccountReply{} }
func (m *LockAccountReply) String() string { return proto.CompactTextString(m) }
func (*LockAccountReply) ProtoMessage()    {}
func (*LockAccountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{13}
}
func (m *LockAccountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockAccountReply.Unmarshal(m, b)
}
func (m *LockAccountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockAccountReply.Marshal(b, m, deterministic)
}
func (m *LockAccountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockAccountReply.Merge(m, src)
}
func (m *LockAccountReply) XXX_Size() int {
	return xxx_messageInfo_LockAccountReply.Size(m)
}
func (m *LockAccountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LockAccountReply.DiscardUnknown(m)
}
var xxx_messageInfo_LockAccountReply proto.InternalMessageInfo
func (m *LockAccountReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}
type ActivateDelegateRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *ActivateDelegateRequest) Reset()         { *m = ActivateDelegateRequest{} }
func (m *ActivateDelegateRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateDelegateRequest) ProtoMessage()    {}
func (*ActivateDelegateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{14}
}
func (m *ActivateDelegateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateDelegateRequest.Unmarshal(m, b)
}
func (m *ActivateDelegateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateDelegateRequest.Marshal(b, m, deterministic)
}
func (m *ActivateDelegateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateDelegateRequest.Merge(m, src)
}
func (m *ActivateDelegateRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateDelegateRequest.Size(m)
}
func (m *ActivateDelegateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateDelegateRequest.DiscardUnknown(m)
}
var xxx_messageInfo_ActivateDelegateRequest proto.InternalMessageInfo
func (m *ActivateDelegateRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *ActivateDelegateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}
type ActivateDelegateReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *ActivateDelegateReply) Reset()         { *m = ActivateDelegateReply{} }
func (m *ActivateDelegateReply) String() string { return proto.CompactTextString(m) }
func (*ActivateDelegateReply) ProtoMessage()    {}
func (*ActivateDelegateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{15}
}
func (m *ActivateDelegateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateDelegateReply.Unmarshal(m, b)
}
func (m *ActivateDelegateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateDelegateReply.Marshal(b, m, deterministic)
}
func (m *ActivateDelegateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateDelegateReply.Merge(m, src)
}
func (m *ActivateDelegateReply) XXX_Size() int {
	return xxx_messageInfo_ActivateDelegateReply.Size(m)
}
func (m *ActivateDelegateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateDelegateReply.DiscardUnknown(m)
}
var xxx_messageInfo_ActivateDelegateReply proto.InternalMessageInfo
func (m *ActivateDelegateReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}
type SignRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Address              []byte   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *SignRequest) Reset()         { *m = SignRequest{} }
func (m *SignRequest) String() string { return proto.CompactTextString(m) }
func (*SignRequest) ProtoMessage()    {}
func (*SignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{16}
}
func (m *SignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignRequest.Unmarshal(m, b)
}
func (m *SignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignRequest.Marshal(b, m, deterministic)
}
func (m *SignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignRequest.Merge(m, src)
}
func (m *SignRequest) XXX_Size() int {
	return xxx_messageInfo_SignRequest.Size(m)
}
func (m *SignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignRequest.DiscardUnknown(m)
}
var xxx_messageInfo_SignRequest proto.InternalMessageInfo
func (m *SignRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}
func (m *SignRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
func (m *SignRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}
type SignReply struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *SignReply) Reset()         { *m = SignReply{} }
func (m *SignReply) String() string { return proto.CompactTextString(m) }
func (*SignReply) ProtoMessage()    {}
func (*SignReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{17}
}
func (m *SignReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignReply.Unmarshal(m, b)
}
func (m *SignReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignReply.Marshal(b, m, deterministic)
}
func (m *SignReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignReply.Merge(m, src)
}
func (m *SignReply) XXX_Size() int {
	return xxx_messageInfo_SignReply.Size(m)
}
func (m *SignReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SignReply.DiscardUnknown(m)
}
var xxx_messageInfo_SignReply proto.InternalMessageInfo
func (m *SignReply) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}
type EcRecoverRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Sign                 []byte   `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *EcRecoverRequest) Reset()         { *m = EcRecoverRequest{} }
func (m *EcRecoverRequest) String() string { return proto.CompactTextString(m) }
func (*EcRecoverRequest) ProtoMessage()    {}
func (*EcRecoverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{18}
}
func (m *EcRecoverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EcRecoverRequest.Unmarshal(m, b)
}
func (m *EcRecoverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EcRecoverRequest.Marshal(b, m, deterministic)
}
func (m *EcRecoverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EcRecoverRequest.Merge(m, src)
}
func (m *EcRecoverRequest) XXX_Size() int {
	return xxx_messageInfo_EcRecoverRequest.Size(m)
}
func (m *EcRecoverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EcRecoverRequest.DiscardUnknown(m)
}
var xxx_messageInfo_EcRecoverRequest proto.InternalMessageInfo
func (m *EcRecoverRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}
func (m *EcRecoverRequest) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}
type EcRecoverReply struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *EcRecoverReply) Reset()         { *m = EcRecoverReply{} }
func (m *EcRecoverReply) String() string { return proto.CompactTextString(m) }
func (*EcRecoverReply) ProtoMessage()    {}
func (*EcRecoverReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{19}
}
func (m *EcRecoverReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EcRecoverReply.Unmarshal(m, b)
}
func (m *EcRecoverReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EcRecoverReply.Marshal(b, m, deterministic)
}
func (m *EcRecoverReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EcRecoverReply.Merge(m, src)
}
func (m *EcRecoverReply) XXX_Size() int {
	return xxx_messageInfo_EcRecoverReply.Size(m)
}
func (m *EcRecoverReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EcRecoverReply.DiscardUnknown(m)
}
var xxx_messageInfo_EcRecoverReply proto.InternalMessageInfo
func (m *EcRecoverReply) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
// SendTxArgs represents the arguments to sumbit a new transaction into the transaction pool.
type SendTxRequest struct {
	Tx                   *utils.SendTx `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Password             string        `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}
func (m *SendTxRequest) Reset()         { *m = SendTxRequest{} }
func (m *SendTxRequest) String() string { return proto.CompactTextString(m) }
func (*SendTxRequest) ProtoMessage()    {}
func (*SendTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{20}
}
func (m *SendTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTxRequest.Unmarshal(m, b)
}
func (m *SendTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTxRequest.Marshal(b, m, deterministic)
}
func (m *SendTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTxRequest.Merge(m, src)
}
func (m *SendTxRequest) XXX_Size() int {
	return xxx_messageInfo_SendTxRequest.Size(m)
}
func (m *SendTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTxRequest.DiscardUnknown(m)
}
var xxx_messageInfo_SendTxRequest proto.InternalMessageInfo
func (m *SendTxRequest) GetTx() *utils.SendTx {
	if m != nil {
		return m.Tx
	}
	return nil
}
func (m *SendTxRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}
type SendTxReply struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *SendTxReply) Reset()         { *m = SendTxReply{} }
func (m *SendTxReply) String() string { return proto.CompactTextString(m) }
func (*SendTxReply) ProtoMessage()    {}
func (*SendTxReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{21}
}
func (m *SendTxReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTxReply.Unmarshal(m, b)
}
func (m *SendTxReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTxReply.Marshal(b, m, deterministic)
}
func (m *SendTxReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTxReply.Merge(m, src)
}
func (m *SendTxReply) XXX_Size() int {
	return xxx_messageInfo_SendTxReply.Size(m)
}
func (m *SendTxReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTxReply.DiscardUnknown(m)
}
var xxx_messageInfo_SendTxReply proto.InternalMessageInfo
func (m *SendTxReply) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}
type SignTransactionRequest struct {
	Tx                   *utils.SendTx `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Password             string        `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}
func (m *SignTransactionRequest) Reset()         { *m = SignTransactionRequest{} }
func (m *SignTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SignTransactionRequest) ProtoMessage()    {}
func (*SignTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{22}
}
func (m *SignTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionRequest.Unmarshal(m, b)
}
func (m *SignTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SignTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionRequest.Merge(m, src)
}
func (m *SignTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SignTransactionRequest.Size(m)
}
func (m *SignTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionRequest.DiscardUnknown(m)
}
var xxx_messageInfo_SignTransactionRequest proto.InternalMessageInfo
func (m *SignTransactionRequest) GetTx() *utils.SendTx {
	if m != nil {
		return m.Tx
	}
	return nil
}
func (m *SignTransactionRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}
// SignTransactionResult represents a RLP encoded signed transaction.
type SignTransactionReply struct {
	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	//signed is json bytes
	Signed               []byte   `protobuf:"bytes,2,opt,name=signed,proto3" json:"signed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *SignTransactionReply) Reset()         { *m = SignTransactionReply{} }
func (m *SignTransactionReply) String() string { return proto.CompactTextString(m) }
func (*SignTransactionReply) ProtoMessage()    {}
func (*SignTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{23}
}
func (m *SignTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionReply.Unmarshal(m, b)
}
func (m *SignTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionReply.Marshal(b, m, deterministic)
}
func (m *SignTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionReply.Merge(m, src)
}
func (m *SignTransactionReply) XXX_Size() int {
	return xxx_messageInfo_SignTransactionReply.Size(m)
}
func (m *SignTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionReply.DiscardUnknown(m)
}
var xxx_messageInfo_SignTransactionReply proto.InternalMessageInfo
func (m *SignTransactionReply) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}
func (m *SignTransactionReply) GetSigned() []byte {
	if m != nil {
		return m.Signed
	}
	return nil
}
type NonceRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *NonceRequest) Reset()         { *m = NonceRequest{} }
func (m *NonceRequest) String() string { return proto.CompactTextString(m) }
func (*NonceRequest) ProtoMessage()    {}
func (*NonceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{24}
}
func (m *NonceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonceRequest.Unmarshal(m, b)
}
func (m *NonceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonceRequest.Marshal(b, m, deterministic)
}
func (m *NonceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonceRequest.Merge(m, src)
}
func (m *NonceRequest) XXX_Size() int {
	return xxx_messageInfo_NonceRequest.Size(m)
}
func (m *NonceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NonceRequest.DiscardUnknown(m)
}
var xxx_messageInfo_NonceRequest proto.InternalMessageInfo
func (m *NonceRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}
type NonceReply struct {
	Nonce                uint64   `protobuf:"fixed64,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *NonceReply) Reset()         { *m = NonceReply{} }
func (m *NonceReply) String() string { return proto.CompactTextString(m) }
func (*NonceReply) ProtoMessage()    {}
func (*NonceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_239d5862ee3350b7, []int{25}
}
func (m *NonceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonceReply.Unmarshal(m, b)
}
func (m *NonceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonceReply.Marshal(b, m, deterministic)
}
func (m *NonceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonceReply.Merge(m, src)
}
func (m *NonceReply) XXX_Size() int {
	return xxx_messageInfo_NonceReply.Size(m)
}
func (m *NonceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NonceReply.DiscardUnknown(m)
}
var xxx_messageInfo_NonceReply proto.InternalMessageInfo
func (m *NonceReply) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}
func init() {
	proto.RegisterType((*RawWalletRequest)(nil), "personal.RawWalletRequest")
	proto.RegisterType((*RawWalletReply)(nil), "personal.RawWalletReply")
	proto.RegisterType((*RawWallet)(nil), "personal.RawWallet")
	proto.RegisterType((*Account)(nil), "personal.Account")
	proto.RegisterType((*Url)(nil), "personal.Url")
	proto.RegisterType((*OpenWalletRequest)(nil), "personal.OpenWalletRequest")
	proto.RegisterType((*OpenWalletReply)(nil), "personal.OpenWalletReply")
	proto.RegisterType((*DeriveAccountRequest)(nil), "personal.DeriveAccountRequest")
	proto.RegisterType((*NewAccountRequest)(nil), "personal.NewAccountRequest")
	proto.RegisterType((*NewAccountReply)(nil), "personal.NewAccountReply")
	proto.RegisterType((*ImportRawKeyRequest)(nil), "personal.ImportRawKeyRequest")
	proto.RegisterType((*ImportRawKeyReply)(nil), "personal.ImportRawKeyReply")
	proto.RegisterType((*LockAccountRequest)(nil), "personal.LockAccountRequest")
	proto.RegisterType((*LockAccountReply)(nil), "personal.LockAccountReply")
	proto.RegisterType((*ActivateDelegateRequest)(nil), "personal.ActivateDelegateRequest")
	proto.RegisterType((*ActivateDelegateReply)(nil), "personal.ActivateDelegateReply")
	proto.RegisterType((*SignRequest)(nil), "personal.SignRequest")
	proto.RegisterType((*SignReply)(nil), "personal.SignReply")
	proto.RegisterType((*EcRecoverRequest)(nil), "personal.EcRecoverRequest")
	proto.RegisterType((*EcRecoverReply)(nil), "personal.EcRecoverReply")
	proto.RegisterType((*SendTxRequest)(nil), "personal.SendTxRequest")
	proto.RegisterType((*SendTxReply)(nil), "personal.SendTxReply")
	proto.RegisterType((*SignTransactionRequest)(nil), "personal.SignTransactionRequest")
	proto.RegisterType((*SignTransactionReply)(nil), "personal.SignTransactionReply")
	proto.RegisterType((*NonceRequest)(nil), "personal.NonceRequest")
	proto.RegisterType((*NonceReply)(nil), "personal.NonceReply")
}
func init() { proto.RegisterFile("personal/personal.proto", fileDescriptor_239d5862ee3350b7) }
var fileDescriptor_239d5862ee3350b7 = []byte{
	// 889 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcb, 0x72, 0xdb, 0x36,
	0x14, 0xb5, 0x25, 0xd5, 0x91, 0xae, 0xe4, 0x58, 0x82, 0x65, 0x59, 0x65, 0x12, 0xc7, 0xc1, 0xca,
	0x7d, 0xc4, 0x9e, 0x38, 0x5d, 0x75, 0x91, 0xa9, 0xa7, 0x76, 0x67, 0x12, 0x67, 0x9c, 0x94, 0x8e,
	0x27, 0xdd, 0xa2, 0x24, 0x22, 0x71, 0x4a, 0x93, 0x2c, 0x00, 0x5a, 0xd6, 0xa6, 0x1f, 0xd8, 0xaf,
	0xea, 0xe0, 0x25, 0x42, 0x22, 0xc5, 0x2e, 0xe2, 0x1d, 0xee, 0x03, 0xe7, 0x1c, 0xdc, 0x01, 0x0e,
	0x09, 0xfb, 0x19, 0x65, 0x3c, 0x4d, 0x48, 0x7c, 0x62, 0x17, 0xc7, 0x19, 0x4b, 0x45, 0x8a, 0xda,
	0x36, 0xf6, 0x50, 0x2e, 0xa2, 0x98, 0x9f, 0x04, 0xe9, 0xed, 0x6d, 0x9a, 0xe8, 0x2a, 0x46, 0xd0,
	0xf7, 0xc9, 0xec, 0x33, 0x89, 0x63, 0x2a, 0x7c, 0xfa, 0x77, 0x4e, 0xb9, 0xc0, 0x17, 0xf0, 0xd8,
	0xc9, 0x65, 0xf1, 0x1c, 0xbd, 0x06, 0x60, 0x36, 0xc3, 0xc7, 0x9b, 0x87, 0xcd, 0xa3, 0xee, 0xe9,
	0xee, 0xf1, 0x82, 0xa8, 0xe8, 0x76, 0xda, 0xf0, 0x3f, 0xd0, 0x59, 0x14, 0x50, 0x1f, 0x9a, 0x39,
	0x8b, 0xc7, 0x9b, 0x87, 0x9b, 0x47, 0x1d, 0x5f, 0x2e, 0xd1, 0x08, 0xb6, 0xb8, 0x20, 0x22, 0xe7,
	0xe3, 0x86, 0x4a, 0x9a, 0x08, 0x8d, 0xe1, 0xd1, 0x17, 0x12, 0xc5, 0x39, 0xa3, 0xe3, 0xa6, 0x2a,
	0xd8, 0x10, 0xbd, 0x84, 0x36, 0x09, 0x82, 0x34, 0x4f, 0x04, 0x1f, 0xb7, 0x94, 0x86, 0x41, 0xa1,
	0xe1, 0x4c, 0x57, 0xfc, 0x45, 0x0b, 0x3e, 0x87, 0x47, 0x26, 0x29, 0x31, 0x49, 0x18, 0x32, 0xca,
	0xb9, 0x52, 0xd0, 0xf3, 0x6d, 0x88, 0x9e, 0x6b, 0x5d, 0x52, 0x42, 0xf7, 0x74, 0xbb, 0x80, 0xbb,
	0x61, 0xb1, 0x92, 0x89, 0x5f, 0x41, 0xf3, 0xc6, 0xa8, 0x0d, 0xa6, 0xf4, 0x96, 0x9a, 0x23, 0x98,
	0x08, 0x21, 0x68, 0x65, 0x44, 0x4c, 0xcd, 0x19, 0xd4, 0x1a, 0x5f, 0xc0, 0xe0, 0x43, 0x46, 0x93,
	0xa5, 0xa1, 0x56, 0x0c, 0xe0, 0x00, 0x20, 0x23, 0x9c, 0x67, 0x53, 0x46, 0x38, 0x35, 0x00, 0x4e,
	0x06, 0x0f, 0x60, 0xc7, 0x85, 0xc9, 0xe2, 0x39, 0xbe, 0x82, 0xe1, 0x39, 0x65, 0xd1, 0x1d, 0xb5,
	0xa7, 0x5d, 0x0b, 0x5e, 0xa1, 0x4b, 0x76, 0x65, 0x51, 0xa2, 0xa6, 0xda, 0xf6, 0xe5, 0x12, 0x9f,
	0xc0, 0xe0, 0x8a, 0xce, 0x56, 0xc0, 0x3c, 0x68, 0x4b, 0x15, 0xb3, 0x94, 0x85, 0x06, 0x71, 0x11,
	0xe3, 0x1f, 0x60, 0xc7, 0xdd, 0x20, 0xef, 0xc6, 0xda, 0xd9, 0xe2, 0xdf, 0x61, 0xf7, 0xed, 0x6d,
	0x96, 0x32, 0xe1, 0x93, 0xd9, 0x25, 0x9d, 0x5b, 0x7c, 0x79, 0x6e, 0x16, 0xdd, 0x11, 0x41, 0x2f,
	0xe9, 0xdc, 0x30, 0x38, 0x99, 0x25, 0xfe, 0xc6, 0x0a, 0xff, 0x4b, 0x18, 0x2c, 0x43, 0xd6, 0x2b,
	0xf8, 0x02, 0xe8, 0x7d, 0x1a, 0xfc, 0xb5, 0x72, 0xc0, 0xf5, 0xb7, 0xa1, 0x86, 0x5a, 0xd6, 0xc2,
	0x9c, 0x11, 0x11, 0xa5, 0x7a, 0x84, 0x5b, 0xfe, 0x22, 0xc6, 0x3f, 0x42, 0x7f, 0x89, 0xc7, 0xa8,
	0xe2, 0x79, 0x10, 0x58, 0x96, 0xb6, 0x6f, 0x43, 0xfc, 0x01, 0xf6, 0xcf, 0x02, 0xa1, 0xce, 0x7b,
	0x4e, 0x63, 0x3a, 0x21, 0x82, 0x7e, 0x95, 0x34, 0xfc, 0x0a, 0xf6, 0xca, 0x80, 0xf5, 0x1a, 0x3e,
	0x43, 0xf7, 0x3a, 0x9a, 0x24, 0x96, 0x17, 0x41, 0x2b, 0x24, 0x82, 0x18, 0x52, 0xb5, 0x76, 0xb5,
	0x34, 0xd6, 0x6b, 0x69, 0xae, 0x68, 0xf9, 0x0e, 0x3a, 0x1a, 0x58, 0xf2, 0x3f, 0x85, 0x0e, 0x8f,
	0x26, 0x09, 0x11, 0xf2, 0x35, 0x6b, 0xec, 0x22, 0x81, 0x7f, 0x86, 0xfe, 0x45, 0xe0, 0xd3, 0x20,
	0xbd, 0xa3, 0xac, 0x4e, 0x08, 0x82, 0x96, 0xdc, 0x64, 0x54, 0xa8, 0x35, 0xfe, 0x1e, 0x1e, 0x3b,
	0x7b, 0xeb, 0x6f, 0xc1, 0x3b, 0xd8, 0xbe, 0xa6, 0x49, 0xf8, 0xe9, 0xde, 0x92, 0x3c, 0x83, 0x86,
	0xb8, 0x57, 0x5d, 0xf2, 0xcd, 0x2b, 0x57, 0x3c, 0x36, 0x1d, 0x0d, 0x71, 0x5f, 0x3b, 0xea, 0x17,
	0xd0, 0xb5, 0x58, 0x92, 0x14, 0x41, 0x6b, 0x4a, 0xf8, 0xd4, 0xca, 0x95, 0x6b, 0x7c, 0x0d, 0x23,
	0x39, 0x81, 0x4f, 0x8c, 0x24, 0x9c, 0x04, 0xf2, 0x7e, 0x3c, 0x00, 0xef, 0x2f, 0x30, 0x2c, 0x81,
	0x4a, 0x01, 0x7d, 0x68, 0x32, 0x32, 0x33, 0xfc, 0x72, 0xa9, 0x9c, 0x2a, 0x9a, 0x24, 0x34, 0x34,
	0xf3, 0x32, 0x11, 0x3e, 0x82, 0xde, 0x55, 0x9a, 0x04, 0xff, 0x7f, 0xd5, 0x30, 0x06, 0x30, 0x9d,
	0x92, 0x61, 0x08, 0xdf, 0x24, 0x32, 0x52, 0x5d, 0x5b, 0xbe, 0x0e, 0x4e, 0xff, 0x6d, 0x43, 0xfb,
	0xa3, 0x31, 0x4b, 0xf4, 0x06, 0x7a, 0x71, 0xc4, 0x85, 0xb9, 0xfe, 0x1c, 0x8d, 0xcc, 0xd9, 0x6c,
	0xc2, 0x50, 0x7a, 0xc3, 0x52, 0x5e, 0x9a, 0xda, 0x06, 0xba, 0x80, 0xae, 0xdc, 0x6f, 0x3e, 0x1c,
	0xc8, 0xab, 0xfa, 0xb2, 0x18, 0x88, 0x71, 0x65, 0x4d, 0xc3, 0xfc, 0x06, 0x90, 0x2e, 0x0c, 0x13,
	0x3d, 0x29, 0x3a, 0x4b, 0x6e, 0xec, 0x7d, 0x5b, 0x5d, 0xd4, 0x38, 0xe7, 0xb0, 0x1d, 0xba, 0x2e,
	0x8b, 0x0e, 0x8a, 0xee, 0x2a, 0xfb, 0xf5, 0xca, 0x9f, 0x21, 0xad, 0x26, 0x59, 0x58, 0xa5, 0xab,
	0xa6, 0xe4, 0xb8, 0xae, 0x9a, 0x15, 0x77, 0xc5, 0x1b, 0xe8, 0x3d, 0xf4, 0x22, 0xc7, 0xf2, 0xd0,
	0xb3, 0xa2, 0xb9, 0xc2, 0x5d, 0xbd, 0x27, 0xeb, 0xca, 0x1a, 0xed, 0x12, 0xb6, 0xf3, 0x24, 0x2e,
	0xbc, 0x0a, 0x3d, 0x2d, 0xfa, 0xcb, 0x56, 0xe9, 0x79, 0x6b, 0xaa, 0x1a, 0xec, 0x2d, 0x74, 0x1f,
	0x0a, 0xea, 0x0f, 0xe8, 0x93, 0x15, 0x0b, 0x43, 0x2f, 0xdc, 0xb1, 0x56, 0xfa, 0xa5, 0xf7, 0xbc,
	0xae, 0x45, 0x23, 0xff, 0x0a, 0x3b, 0x5c, 0xbe, 0xb1, 0xe2, 0xe5, 0xa0, 0xfd, 0x62, 0xd7, 0x92,
	0x31, 0x78, 0x7b, 0xe5, 0x82, 0x06, 0xb9, 0x81, 0x1d, 0xbe, 0xfc, 0xfc, 0xd0, 0xa1, 0xd3, 0x5b,
	0xf9, 0xdc, 0xbd, 0x83, 0x9a, 0x0e, 0x0d, 0xfb, 0x93, 0x76, 0x36, 0xb4, 0xb7, 0xdc, 0x69, 0x01,
	0x76, 0x57, 0xd3, 0xf6, 0x44, 0x1d, 0x6a, 0xbd, 0xcf, 0x7d, 0x2c, 0xab, 0x66, 0xea, 0x3e, 0x96,
	0x65, 0xb3, 0xc4, 0x1b, 0xe8, 0x1d, 0x8c, 0x24, 0xf5, 0x59, 0x12, 0x5e, 0x7f, 0xf5, 0x74, 0xde,
	0x40, 0x6f, 0x42, 0xc5, 0xc7, 0x34, 0x8d, 0x95, 0x6f, 0xa0, 0x91, 0x73, 0x9f, 0x1d, 0xcb, 0xf1,
	0x86, 0xa5, 0xbc, 0xda, 0xff, 0xe7, 0x96, 0xfa, 0x17, 0x7d, 0xfd, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xfb, 0x9b, 0xd7, 0xcc, 0xc4, 0x0a, 0x00, 0x00,
}
// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn
// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4
// PersonalClient is the client API for Personal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonalClient interface {
	ListAccounts(ctx context.Context, in *utils.AccountsRequest, opts ...grpc.CallOption) (*utils.AccountsReply, error)
	ListWallets(ctx context.Context, in *RawWalletRequest, opts ...grpc.CallOption) (*RawWalletReply, error)
	OpenWallet(ctx context.Context, in *OpenWalletRequest, opts ...grpc.CallOption) (*OpenWalletReply, error)
	DeriveAccount(ctx context.Context, in *DeriveAccountRequest, opts ...grpc.CallOption) (*Account, error)
	NewAccount(ctx context.Context, in *NewAccountRequest, opts ...grpc.CallOption) (*NewAccountReply, error)
	ImportRawKey(ctx context.Context, in *ImportRawKeyRequest, opts ...grpc.CallOption) (*ImportRawKeyReply, error)
	UnlockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountReply, error)
	LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountReply, error)
	ActivateDelegate(ctx context.Context, in *ActivateDelegateRequest, opts ...grpc.CallOption) (*ActivateDelegateReply, error)
	SendTransaction(ctx context.Context, in *SendTxRequest, opts ...grpc.CallOption) (*SendTxReply, error)
	SignTransaction(ctx context.Context, in *SignTransactionRequest, opts ...grpc.CallOption) (*SignTransactionReply, error)
	Sign(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*SignReply, error)
	EcRecover(ctx context.Context, in *EcRecoverRequest, opts ...grpc.CallOption) (*EcRecoverReply, error)
	SignAndSendTransaction(ctx context.Context, in *SendTxRequest, opts ...grpc.CallOption) (*SendTxReply, error)
	GetPoolNonce(ctx context.Context, in *NonceRequest, opts ...grpc.CallOption) (*NonceReply, error)
}
type personalClient struct {
	cc *grpc.ClientConn
}
func NewPersonalClient(cc *grpc.ClientConn) PersonalClient {
	return &personalClient{cc}
}
func (c *personalClient) ListAccounts(ctx context.Context, in *utils.AccountsRequest, opts ...grpc.CallOption) (*utils.AccountsReply, error) {
	out := new(utils.AccountsReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/listAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) ListWallets(ctx context.Context, in *RawWalletRequest, opts ...grpc.CallOption) (*RawWalletReply, error) {
	out := new(RawWalletReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/listWallets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) OpenWallet(ctx context.Context, in *OpenWalletRequest, opts ...grpc.CallOption) (*OpenWalletReply, error) {
	out := new(OpenWalletReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/openWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) DeriveAccount(ctx context.Context, in *DeriveAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/personal.Personal/deriveAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) NewAccount(ctx context.Context, in *NewAccountRequest, opts ...grpc.CallOption) (*NewAccountReply, error) {
	out := new(NewAccountReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/newAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) ImportRawKey(ctx context.Context, in *ImportRawKeyRequest, opts ...grpc.CallOption) (*ImportRawKeyReply, error) {
	out := new(ImportRawKeyReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/importRawKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) UnlockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountReply, error) {
	out := new(LockAccountReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/unlockAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountReply, error) {
	out := new(LockAccountReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/lockAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) ActivateDelegate(ctx context.Context, in *ActivateDelegateRequest, opts ...grpc.CallOption) (*ActivateDelegateReply, error) {
	out := new(ActivateDelegateReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/activateDelegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) SendTransaction(ctx context.Context, in *SendTxRequest, opts ...grpc.CallOption) (*SendTxReply, error) {
	out := new(SendTxReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/sendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) SignTransaction(ctx context.Context, in *SignTransactionRequest, opts ...grpc.CallOption) (*SignTransactionReply, error) {
	out := new(SignTransactionReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/signTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) Sign(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*SignReply, error) {
	out := new(SignReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/sign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) EcRecover(ctx context.Context, in *EcRecoverRequest, opts ...grpc.CallOption) (*EcRecoverReply, error) {
	out := new(EcRecoverReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/ecRecover", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) SignAndSendTransaction(ctx context.Context, in *SendTxRequest, opts ...grpc.CallOption) (*SendTxReply, error) {
	out := new(SendTxReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/signAndSendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *personalClient) GetPoolNonce(ctx context.Context, in *NonceRequest, opts ...grpc.CallOption) (*NonceReply, error) {
	out := new(NonceReply)
	err := c.cc.Invoke(ctx, "/personal.Personal/getPoolNonce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
// PersonalServer is the server API for Personal service.
type PersonalServer interface {
	ListAccounts(context.Context, *utils.AccountsRequest) (*utils.AccountsReply, error)
	ListWallets(context.Context, *RawWalletRequest) (*RawWalletReply, error)
	OpenWallet(context.Context, *OpenWalletRequest) (*OpenWalletReply, error)
	DeriveAccount(context.Context, *DeriveAccountRequest) (*Account, error)
	NewAccount(context.Context, *NewAccountRequest) (*NewAccountReply, error)
	ImportRawKey(context.Context, *ImportRawKeyRequest) (*ImportRawKeyReply, error)
	UnlockAccount(context.Context, *LockAccountRequest) (*LockAccountReply, error)
	LockAccount(context.Context, *LockAccountRequest) (*LockAccountReply, error)
	ActivateDelegate(context.Context, *ActivateDelegateRequest) (*ActivateDelegateReply, error)
	SendTransaction(context.Context, *SendTxRequest) (*SendTxReply, error)
	SignTransaction(context.Context, *SignTransactionRequest) (*SignTransactionReply, error)
	Sign(context.Context, *SignRequest) (*SignReply, error)
	EcRecover(context.Context, *EcRecoverRequest) (*EcRecoverReply, error)
	SignAndSendTransaction(context.Context, *SendTxRequest) (*SendTxReply, error)
	GetPoolNonce(context.Context, *NonceRequest) (*NonceReply, error)
}
// UnimplementedPersonalServer can be embedded to have forward compatible implementations.
type UnimplementedPersonalServer struct {
}
func (*UnimplementedPersonalServer) ListAccounts(ctx context.Context, req *utils.AccountsRequest) (*utils.AccountsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAccounts not implemented")
}
func (*UnimplementedPersonalServer) ListWallets(ctx context.Context, req *RawWalletRequest) (*RawWalletReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWallets not implemented")
}
func (*UnimplementedPersonalServer) OpenWallet(ctx context.Context, req *OpenWalletRequest) (*OpenWalletReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenWallet not implemented")
}
func (*UnimplementedPersonalServer) DeriveAccount(ctx context.Context, req *DeriveAccountRequest) (*Account, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeriveAccount not implemented")
}
func (*UnimplementedPersonalServer) NewAccount(ctx context.Context, req *NewAccountRequest) (*NewAccountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewAccount not implemented")
}
func (*UnimplementedPersonalServer) ImportRawKey(ctx context.Context, req *ImportRawKeyRequest) (*ImportRawKeyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportRawKey not implemented")
}
func (*UnimplementedPersonalServer) UnlockAccount(ctx context.Context, req *LockAccountRequest) (*LockAccountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlockAccount not implemented")
}
func (*UnimplementedPersonalServer) LockAccount(ctx context.Context, req *LockAccountRequest) (*LockAccountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LockAccount not implemented")
}
func (*UnimplementedPersonalServer) ActivateDelegate(ctx context.Context, req *ActivateDelegateRequest) (*ActivateDelegateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateDelegate not implemented")
}
func (*UnimplementedPersonalServer) SendTransaction(ctx context.Context, req *SendTxRequest) (*SendTxReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTransaction not implemented")
}
func (*UnimplementedPersonalServer) SignTransaction(ctx context.Context, req *SignTransactionRequest) (*SignTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignTransaction not implemented")
}
func (*UnimplementedPersonalServer) Sign(ctx context.Context, req *SignRequest) (*SignReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sign not implemented")
}
func (*UnimplementedPersonalServer) EcRecover(ctx context.Context, req *EcRecoverRequest) (*EcRecoverReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EcRecover not implemented")
}
func (*UnimplementedPersonalServer) SignAndSendTransaction(ctx context.Context, req *SendTxRequest) (*SendTxReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignAndSendTransaction not implemented")
}
func (*UnimplementedPersonalServer) GetPoolNonce(ctx context.Context, req *NonceRequest) (*NonceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPoolNonce not implemented")
}
func RegisterPersonalServer(s *grpc.Server, srv PersonalServer) {
	s.RegisterService(&_Personal_serviceDesc, srv)
}
func _Personal_ListAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(utils.AccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).ListAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/ListAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).ListAccounts(ctx, req.(*utils.AccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_ListWallets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).ListWallets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/ListWallets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).ListWallets(ctx, req.(*RawWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_OpenWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).OpenWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/OpenWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).OpenWallet(ctx, req.(*OpenWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_DeriveAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeriveAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).DeriveAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/DeriveAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).DeriveAccount(ctx, req.(*DeriveAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_NewAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).NewAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/NewAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).NewAccount(ctx, req.(*NewAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_ImportRawKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportRawKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).ImportRawKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/ImportRawKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).ImportRawKey(ctx, req.(*ImportRawKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_UnlockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).UnlockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/UnlockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).UnlockAccount(ctx, req.(*LockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_LockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).LockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/LockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).LockAccount(ctx, req.(*LockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_ActivateDelegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateDelegateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).ActivateDelegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/ActivateDelegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).ActivateDelegate(ctx, req.(*ActivateDelegateRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).SendTransaction(ctx, req.(*SendTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_SignTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).SignTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/SignTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).SignTransaction(ctx, req.(*SignTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_Sign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).Sign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/Sign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).Sign(ctx, req.(*SignRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_EcRecover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EcRecoverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).EcRecover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/EcRecover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).EcRecover(ctx, req.(*EcRecoverRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_SignAndSendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).SignAndSendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/SignAndSendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).SignAndSendTransaction(ctx, req.(*SendTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Personal_GetPoolNonce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonalServer).GetPoolNonce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personal.Personal/GetPoolNonce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonalServer).GetPoolNonce(ctx, req.(*NonceRequest))
	}
	return interceptor(ctx, in, info, handler)
}
var _Personal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "personal.Personal",
	HandlerType: (*PersonalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "listAccounts",
			Handler:    _Personal_ListAccounts_Handler,
		},
		{
			MethodName: "listWallets",
			Handler:    _Personal_ListWallets_Handler,
		},
		{
			MethodName: "openWallet",
			Handler:    _Personal_OpenWallet_Handler,
		},
		{
			MethodName: "deriveAccount",
			Handler:    _Personal_DeriveAccount_Handler,
		},
		{
			MethodName: "newAccount",
			Handler:    _Personal_NewAccount_Handler,
		},
		{
			MethodName: "importRawKey",
			Handler:    _Personal_ImportRawKey_Handler,
		},
		{
			MethodName: "unlockAccount",
			Handler:    _Personal_UnlockAccount_Handler,
		},
		{
			MethodName: "lockAccount",
			Handler:    _Personal_LockAccount_Handler,
		},
		{
			MethodName: "activateDelegate",
			Handler:    _Personal_ActivateDelegate_Handler,
		},
		{
			MethodName: "sendTransaction",
			Handler:    _Personal_SendTransaction_Handler,
		},
		{
			MethodName: "signTransaction",
			Handler:    _Personal_SignTransaction_Handler,
		},
		{
			MethodName: "sign",
			Handler:    _Personal_Sign_Handler,
		},
		{
			MethodName: "ecRecover",
			Handler:    _Personal_EcRecover_Handler,
		},
		{
			MethodName: "signAndSendTransaction",
			Handler:    _Personal_SignAndSendTransaction_Handler,
		},
		{
			MethodName: "getPoolNonce",
			Handler:    _Personal_GetPoolNonce_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "personal/personal.proto",
}