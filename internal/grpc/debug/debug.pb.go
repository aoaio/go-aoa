// Code generated by protoc-gen-go. DO NOT EDIT.
// source: debug.proto
package debug
import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)
// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
type BlockRequest struct {
	Number               uint64   `protobuf:"fixed64,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{0}
}
func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (m *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(m, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}
var xxx_messageInfo_BlockRequest proto.InternalMessageInfo
func (m *BlockRequest) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}
type ResultReply struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *ResultReply) Reset()         { *m = ResultReply{} }
func (m *ResultReply) String() string { return proto.CompactTextString(m) }
func (*ResultReply) ProtoMessage()    {}
func (*ResultReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{1}
}
func (m *ResultReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultReply.Unmarshal(m, b)
}
func (m *ResultReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultReply.Marshal(b, m, deterministic)
}
func (m *ResultReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultReply.Merge(m, src)
}
func (m *ResultReply) XXX_Size() int {
	return xxx_messageInfo_ResultReply.Size(m)
}
func (m *ResultReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultReply.DiscardUnknown(m)
}
var xxx_messageInfo_ResultReply proto.InternalMessageInfo
func (m *ResultReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}
type Property struct {
	Property             string   `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *Property) Reset()         { *m = Property{} }
func (m *Property) String() string { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()    {}
func (*Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{2}
}
func (m *Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Property.Unmarshal(m, b)
}
func (m *Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Property.Marshal(b, m, deterministic)
}
func (m *Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Property.Merge(m, src)
}
func (m *Property) XXX_Size() int {
	return xxx_messageInfo_Property.Size(m)
}
func (m *Property) XXX_DiscardUnknown() {
	xxx_messageInfo_Property.DiscardUnknown(m)
}
var xxx_messageInfo_Property proto.InternalMessageInfo
func (m *Property) GetProperty() string {
	if m != nil {
		return m.Property
	}
	return ""
}
type Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{3}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}
var xxx_messageInfo_Request proto.InternalMessageInfo
type Reply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{4}
}
func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}
var xxx_messageInfo_Reply proto.InternalMessageInfo
func init() {
	proto.RegisterType((*BlockRequest)(nil), "debug.BlockRequest")
	proto.RegisterType((*ResultReply)(nil), "debug.ResultReply")
	proto.RegisterType((*Property)(nil), "debug.Property")
	proto.RegisterType((*Request)(nil), "debug.Request")
	proto.RegisterType((*Reply)(nil), "debug.Reply")
}
func init() { proto.RegisterFile("debug.proto", fileDescriptor_8d9d361be58531fb) }
var fileDescriptor_8d9d361be58531fb = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xdd, 0xc3, 0x6e, 0xdb, 0xd9, 0xd2, 0xc2, 0x08, 0x22, 0x3d, 0x49, 0xc0, 0xe2, 0xa9,
	0x88, 0x1e, 0xec, 0x59, 0x7d, 0x00, 0xc9, 0x1b, 0x34, 0xdb, 0xa1, 0x16, 0xb3, 0x9b, 0x98, 0x4d,
	0x0e, 0xfb, 0xc2, 0x3e, 0x87, 0x6c, 0x32, 0x86, 0xbd, 0x78, 0xe8, 0x2d, 0xdf, 0xf0, 0xff, 0x99,
	0x0f, 0x06, 0xea, 0x23, 0xa9, 0x70, 0xda, 0x59, 0x67, 0xbc, 0xc1, 0x32, 0x82, 0xd8, 0xc2, 0xf2,
	0x55, 0x9b, 0xe6, 0x4b, 0xd2, 0x77, 0xa0, 0xde, 0xe3, 0x0d, 0x54, 0x5d, 0x68, 0x15, 0xb9, 0xdb,
	0xe2, 0xae, 0x78, 0xa8, 0x24, 0x93, 0xb8, 0x87, 0x5a, 0x52, 0x1f, 0xb4, 0x97, 0x64, 0xf5, 0x30,
	0xc6, 0x5c, 0xc4, 0x18, 0x5b, 0x48, 0x26, 0xb1, 0x85, 0xf9, 0x87, 0x33, 0x96, 0x9c, 0x1f, 0x70,
	0x03, 0x73, 0xcb, 0x6f, 0x4e, 0x65, 0x16, 0x0b, 0x98, 0xf1, 0x46, 0x31, 0x83, 0x32, 0xfe, 0xf9,
	0xf4, 0x53, 0x40, 0xf9, 0x3e, 0x4a, 0xe1, 0x1e, 0xea, 0x13, 0xf9, 0xe4, 0xa5, 0x2d, 0x5e, 0xef,
	0x92, 0xf8, 0x54, 0x74, 0x83, 0x3c, 0x9c, 0x58, 0x89, 0x2b, 0x7c, 0x01, 0xb0, 0xee, 0xdc, 0xa5,
	0xee, 0x25, 0xc5, 0x3d, 0xac, 0x9b, 0xcf, 0xc3, 0xb9, 0x3b, 0xaa, 0xec, 0xbf, 0xe6, 0xe0, 0xdf,
	0xe0, 0x9f, 0xe6, 0x23, 0xac, 0xb8, 0xf9, 0x66, 0x5a, 0x7b, 0x68, 0x3c, 0xae, 0x72, 0x2e, 0x6d,
	0x5c, 0x66, 0x8e, 0x0d, 0x55, 0xc5, 0x0b, 0x3c, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xec, 0x7b,
	0x6e, 0x44, 0x90, 0x01, 0x00, 0x00,
}
// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn
// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4
// DebugClient is the client API for Debug service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DebugClient interface {
	GetBlockRlp(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*ResultReply, error)
	PrintBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*ResultReply, error)
	ChaindbProperty(ctx context.Context, in *Property, opts ...grpc.CallOption) (*ResultReply, error)
	ChaindbCompact(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}
type debugClient struct {
	cc *grpc.ClientConn
}
func NewDebugClient(cc *grpc.ClientConn) DebugClient {
	return &debugClient{cc}
}
func (c *debugClient) GetBlockRlp(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*ResultReply, error) {
	out := new(ResultReply)
	err := c.cc.Invoke(ctx, "/debug.Debug/getBlockRlp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *debugClient) PrintBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*ResultReply, error) {
	out := new(ResultReply)
	err := c.cc.Invoke(ctx, "/debug.Debug/printBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *debugClient) ChaindbProperty(ctx context.Context, in *Property, opts ...grpc.CallOption) (*ResultReply, error) {
	out := new(ResultReply)
	err := c.cc.Invoke(ctx, "/debug.Debug/chaindbProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *debugClient) ChaindbCompact(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/debug.Debug/chaindbCompact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
// DebugServer is the server API for Debug service.
type DebugServer interface {
	GetBlockRlp(context.Context, *BlockRequest) (*ResultReply, error)
	PrintBlock(context.Context, *BlockRequest) (*ResultReply, error)
	ChaindbProperty(context.Context, *Property) (*ResultReply, error)
	ChaindbCompact(context.Context, *Request) (*Reply, error)
}
// UnimplementedDebugServer can be embedded to have forward compatible implementations.
type UnimplementedDebugServer struct {
}
func (*UnimplementedDebugServer) GetBlockRlp(ctx context.Context, req *BlockRequest) (*ResultReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockRlp not implemented")
}
func (*UnimplementedDebugServer) PrintBlock(ctx context.Context, req *BlockRequest) (*ResultReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrintBlock not implemented")
}
func (*UnimplementedDebugServer) ChaindbProperty(ctx context.Context, req *Property) (*ResultReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChaindbProperty not implemented")
}
func (*UnimplementedDebugServer) ChaindbCompact(ctx context.Context, req *Request) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChaindbCompact not implemented")
}
func RegisterDebugServer(s *grpc.Server, srv DebugServer) {
	s.RegisterService(&_Debug_serviceDesc, srv)
}
func _Debug_GetBlockRlp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServer).GetBlockRlp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/debug.Debug/GetBlockRlp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServer).GetBlockRlp(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Debug_PrintBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServer).PrintBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/debug.Debug/PrintBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServer).PrintBlock(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _Debug_ChaindbProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Property)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServer).ChaindbProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/debug.Debug/ChaindbProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServer).ChaindbProperty(ctx, req.(*Property))
	}
	return interceptor(ctx, in, info, handler)
}
func _Debug_ChaindbCompact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServer).ChaindbCompact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/debug.Debug/ChaindbCompact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServer).ChaindbCompact(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}
var _Debug_serviceDesc = grpc.ServiceDesc{
	ServiceName: "debug.Debug",
	HandlerType: (*DebugServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getBlockRlp",
			Handler:    _Debug_GetBlockRlp_Handler,
		},
		{
			MethodName: "printBlock",
			Handler:    _Debug_PrintBlock_Handler,
		},
		{
			MethodName: "chaindbProperty",
			Handler:    _Debug_ChaindbProperty_Handler,
		},
		{
			MethodName: "chaindbCompact",
			Handler:    _Debug_ChaindbCompact_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "debug.proto",
}